{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17","program":"/home/yxine/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0a08bedc20714d23","-C","extra-filename=-0a08bedc20714d23","--out-dir","/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps","-L","dependency=/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps","--extern","futures_core=/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps/libfutures_core-c82f2f7bacf50b06.rmeta","--extern","futures_task=/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps/libfutures_task-d8cf79f7ecbf7b9f.rmeta","--extern","pin_project_lite=/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps/libpin_project_lite-9283102e9cf41fdf.rmeta","--extern","pin_utils=/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps/libpin_utils-919eec9578452e19.rmeta","--cap-lints","allow","--cfg","fn_like_proc_macro","--error-format=json","--sysroot","/home/yxine/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps/libfutures_util-0a08bedc20714d23.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[4206023374895261282,7334180102826883351]},"crate_root":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src","external_crates":[{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[210103200064463855,1750333540737316927]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":14,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":15,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":16,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","num":20,"id":{"name":"pin_utils","disambiguator":[9212437317893473852,3409318353310669863]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","num":21,"id":{"name":"futures_task","disambiguator":[9456866330125536692,14431316875860079883]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[11667251130240803622,11402799896671659243]}}],"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":0,"byte_end":11997,"line_start":1,"line_end":346,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":169},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1126,"byte_end":1131,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":7},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":1152,"byte_end":1159,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":12101},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12466,"byte_end":12472,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":4,"index":27},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12591,"byte_end":12602,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12604,"byte_end":12613,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":21,"index":114},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12639,"byte_end":12648,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":21,"index":80},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12650,"byte_end":12664,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":21,"index":135},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12666,"byte_end":12681,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4814},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12796,"byte_end":12803,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4728},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12805,"byte_end":12809,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12811,"byte_end":12820,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5157},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12822,"byte_end":12829,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4972},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12831,"byte_end":12841,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4912},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12843,"byte_end":12846,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5022},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12848,"byte_end":12855,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5217},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12857,"byte_end":12867,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5084},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12869,"byte_end":12873,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5265},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12875,"byte_end":12884,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12980,"byte_end":12993,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5616},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13323,"byte_end":13330,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5763},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13332,"byte_end":13339,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5946},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5885},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5316},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13364,"byte_end":13374,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6068},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13376,"byte_end":13382,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6007},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13384,"byte_end":13389,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6130},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13391,"byte_end":13402,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5824},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13404,"byte_end":13410,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5690},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13416,"byte_end":13422,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5444},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13424,"byte_end":13434,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":5565},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13436,"byte_end":13452,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13454,"byte_end":13466,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6203},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13468,"byte_end":13480,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13652,"byte_end":13656,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6261},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13658,"byte_end":13662,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13703,"byte_end":13710,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6267},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13712,"byte_end":13719,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13766,"byte_end":13776,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6273},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13778,"byte_end":13787,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13842,"byte_end":13856,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6286},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13858,"byte_end":13870,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6304},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13908,"byte_end":13920,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":808},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13960,"byte_end":13967,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":803},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":13969,"byte_end":13975,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":867},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14030,"byte_end":14044,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6343},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14046,"byte_end":14059,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":914},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14096,"byte_end":14099,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":911},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14101,"byte_end":14103,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14105,"byte_end":14110,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6377},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14112,"byte_end":14117,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":965},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14152,"byte_end":14156,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14158,"byte_end":14163,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":972},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14165,"byte_end":14170,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":977},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14172,"byte_end":14177,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6479},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14179,"byte_end":14183,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6524},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14185,"byte_end":14190,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6581},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14192,"byte_end":14197,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6650},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14199,"byte_end":14204,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14355,"byte_end":14361,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6731},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14363,"byte_end":14369,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14537,"byte_end":14545,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1096},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14547,"byte_end":14556,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1100},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14558,"byte_end":14567,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1105},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14569,"byte_end":14578,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6809},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14580,"byte_end":14587,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6854},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14589,"byte_end":14597,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6911},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14599,"byte_end":14607,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":6980},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14609,"byte_end":14617,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1164},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14793,"byte_end":14803,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":7061},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14805,"byte_end":14814,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":7069},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":14968,"byte_end":14974,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":1,"index":12101},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11098,"byte_end":11104,"line_start":305,"line_end":305,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11106,"byte_end":11115,"line_start":305,"line_end":305,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11117,"byte_end":11126,"line_start":305,"line_end":305,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11128,"byte_end":11140,"line_start":305,"line_end":305,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":110},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120360,"byte_end":120371,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":96},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120373,"byte_end":120379,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120381,"byte_end":120390,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7093},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120506,"byte_end":120511,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7142},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120513,"byte_end":120520,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7251},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120522,"byte_end":120528,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7291},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120530,"byte_end":120535,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7331},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120537,"byte_end":120546,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7370},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120548,"byte_end":120554,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7435},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120556,"byte_end":120565,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8024},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120567,"byte_end":120574,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7551},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120576,"byte_end":120583,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7604},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120585,"byte_end":120589,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7795},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120591,"byte_end":120598,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7857},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120604,"byte_end":120608,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7905},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120610,"byte_end":120617,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7971},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120619,"byte_end":120622,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8103},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120624,"byte_end":120628,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8245},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120630,"byte_end":120636,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8294},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120638,"byte_end":120646,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8163},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120648,"byte_end":120652,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8204},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120654,"byte_end":120661,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8124},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120663,"byte_end":120671,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8744},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120673,"byte_end":120677,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8111},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120679,"byte_end":120693,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8348},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120699,"byte_end":120703,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8387},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120705,"byte_end":120714,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":2754},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120716,"byte_end":120725,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7896},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120727,"byte_end":120739,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8461},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120741,"byte_end":120745,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8569},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120747,"byte_end":120756,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8500},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120758,"byte_end":120767,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8626},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120769,"byte_end":120773,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":7193},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120775,"byte_end":120780,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8694},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120782,"byte_end":120785,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3568},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121452,"byte_end":121462,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8813},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121464,"byte_end":121471,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8877},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121473,"byte_end":121480,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9015},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121482,"byte_end":121492,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":8946},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121494,"byte_end":121503,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9086},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121505,"byte_end":121515,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9193},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121517,"byte_end":121523,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9124},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121525,"byte_end":121530,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9259},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121532,"byte_end":121538,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9562},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121544,"byte_end":121554,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9609},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121556,"byte_end":121565,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9385},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121567,"byte_end":121576,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9450},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121578,"byte_end":121590,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9516},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121592,"byte_end":121602,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9644},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121604,"byte_end":121611,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9328},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121613,"byte_end":121623,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9320},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121625,"byte_end":121632,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9770},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121638,"byte_end":121650,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3710},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121652,"byte_end":121664,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9839},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121666,"byte_end":121678,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9713},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":121680,"byte_end":121689,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3839},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122110,"byte_end":122114,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9908},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122116,"byte_end":122120,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3874},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122159,"byte_end":122165,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9917},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122167,"byte_end":122173,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3927},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122222,"byte_end":122233,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9926},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122235,"byte_end":122245,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":3961},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122282,"byte_end":122287,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9935},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122289,"byte_end":122294,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4013},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122329,"byte_end":122333,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9946},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122335,"byte_end":122339,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4057},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122380,"byte_end":122387,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9977},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122389,"byte_end":122396,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4107},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122437,"byte_end":122444,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4099},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122446,"byte_end":122452,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4148},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122507,"byte_end":122521,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":9988},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122523,"byte_end":122536,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4191},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122575,"byte_end":122581,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10029},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122583,"byte_end":122589,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4257},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122656,"byte_end":122676,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10067},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122678,"byte_end":122686,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10086},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122688,"byte_end":122706,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":4339},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122745,"byte_end":122751,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":10155},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":122753,"byte_end":122759,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":4,"index":96},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11202,"byte_end":11208,"line_start":309,"line_end":309,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2754},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11210,"byte_end":11219,"line_start":309,"line_end":309,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11221,"byte_end":11230,"line_start":309,"line_end":309,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3710},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11232,"byte_end":11244,"line_start":309,"line_end":309,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":12353},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353676,"byte_end":353683,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":1,"index":42595},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353685,"byte_end":353689,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":1,"index":42631},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353691,"byte_end":353699,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":1,"index":42640},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353701,"byte_end":353715,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":1,"index":12363},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353717,"byte_end":353722,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":21,"index":114},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353749,"byte_end":353758,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":21,"index":80},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353760,"byte_end":353774,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":21,"index":18},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353776,"byte_end":353786,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":21,"index":15},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353788,"byte_end":353793,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":21,"index":21},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353795,"byte_end":353805,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":21,"index":135},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353807,"byte_end":353822,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":21,"index":190},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353848,"byte_end":353858,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":4,"index":194},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":354289,"byte_end":354300,"line_start":35,"line_end":35,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":0,"index":4440},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":354336,"byte_end":354349,"line_start":38,"line_end":38,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":4385}},{"kind":"Use","ref_id":{"krate":0,"index":4439},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":354351,"byte_end":354359,"line_start":38,"line_end":38,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":4385}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":0,"byte_end":11997,"line_start":1,"line_end":346,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4448},{"krate":0,"index":4450},{"krate":0,"index":4664}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":304,"byte_end":310,"line_start":6,"line_end":6,"column_start":35,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       single_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":313,"byte_end":445,"line_start":7,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1240},{"krate":0,"index":1243}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":11999,"byte_end":12023,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12024,"byte_end":12027,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12028,"byte_end":12053,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12054,"byte_end":12057,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12058,"byte_end":12085,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12086,"byte_end":12165,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12166,"byte_end":12203,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12204,"byte_end":12283,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12284,"byte_end":12359,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/mod.rs","byte_start":12360,"byte_end":12424,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":4683},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":35806,"byte_end":35811,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4685},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":35840,"byte_end":35846,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4687},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":35875,"byte_end":35880,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":4680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4680},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":35776,"byte_end":35783,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4685},{"krate":0,"index":4687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4728},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40237,"byte_end":40241,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4730}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42060,"byte_end":42070,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40438,"byte_end":40506,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40511,"byte_end":40514,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40519,"byte_end":40587,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40592,"byte_end":40637,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40642,"byte_end":40645,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40650,"byte_end":40664,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40669,"byte_end":40672,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40677,"byte_end":40684,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40689,"byte_end":40730,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40735,"byte_end":40766,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40771,"byte_end":40827,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40832,"byte_end":40856,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40861,"byte_end":40896,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40901,"byte_end":40926,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40931,"byte_end":40934,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40939,"byte_end":40988,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40993,"byte_end":40996,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41001,"byte_end":41043,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41048,"byte_end":41087,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41092,"byte_end":41131,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41136,"byte_end":41153,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41158,"byte_end":41161,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41166,"byte_end":41236,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41241,"byte_end":41280,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41285,"byte_end":41326,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41331,"byte_end":41357,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41362,"byte_end":41365,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41370,"byte_end":41380,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41385,"byte_end":41402,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41407,"byte_end":41441,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41446,"byte_end":41493,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41498,"byte_end":41547,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41552,"byte_end":41614,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41619,"byte_end":41643,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41648,"byte_end":41691,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41696,"byte_end":41753,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41758,"byte_end":41833,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41838,"byte_end":41868,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41873,"byte_end":41890,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41895,"byte_end":41909,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":41914,"byte_end":41998,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42003,"byte_end":42012,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42017,"byte_end":42022,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42027,"byte_end":42036,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42041,"byte_end":42048,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":4766},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43128,"byte_end":43138,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":4763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4769},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43222,"byte_end":43230,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":4763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4763},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43106,"byte_end":43109,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":4766},{"krate":0,"index":4769}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9145785,"byte_end":9145794,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4814},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":16232,"byte_end":16239,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4816}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4862},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":16490,"byte_end":16503,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":4864}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4912},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":16843,"byte_end":16846,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4915}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4972},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":17053,"byte_end":17063,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4974}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5022},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":17269,"byte_end":17276,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":5025}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5084},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":17469,"byte_end":17473,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":5088}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5157},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":17718,"byte_end":17725,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5160}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5217},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":17966,"byte_end":17976,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":5219}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5265},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":18189,"byte_end":18198,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":5267}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":221},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19180,"byte_end":19189,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19081,"byte_end":19155,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19156,"byte_end":19169,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20021,"byte_end":20024,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19204,"byte_end":19279,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19284,"byte_end":19307,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19312,"byte_end":19315,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19320,"byte_end":19394,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19399,"byte_end":19470,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19475,"byte_end":19537,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19542,"byte_end":19545,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19550,"byte_end":19621,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19626,"byte_end":19697,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19702,"byte_end":19723,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19728,"byte_end":19731,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19736,"byte_end":19750,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19755,"byte_end":19758,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19763,"byte_end":19770,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19775,"byte_end":19816,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19821,"byte_end":19856,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19861,"byte_end":19864,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19869,"byte_end":19898,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19903,"byte_end":19946,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19951,"byte_end":19987,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19992,"byte_end":20001,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20006,"byte_end":20013,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20421,"byte_end":20429,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20194,"byte_end":20269,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20274,"byte_end":20297,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20302,"byte_end":20305,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20310,"byte_end":20388,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20393,"byte_end":20413,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21441,"byte_end":21445,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20588,"byte_end":20664,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20669,"byte_end":20712,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20717,"byte_end":20720,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20725,"byte_end":20796,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20801,"byte_end":20875,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20880,"byte_end":20896,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20901,"byte_end":20904,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20909,"byte_end":20984,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":20989,"byte_end":21000,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21005,"byte_end":21008,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21013,"byte_end":21084,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21089,"byte_end":21115,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21120,"byte_end":21123,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21128,"byte_end":21142,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21147,"byte_end":21150,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21155,"byte_end":21162,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21167,"byte_end":21208,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21213,"byte_end":21248,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21253,"byte_end":21256,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21261,"byte_end":21295,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21300,"byte_end":21365,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21370,"byte_end":21407,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21412,"byte_end":21421,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21426,"byte_end":21433,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22315,"byte_end":22326,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21657,"byte_end":21732,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21737,"byte_end":21758,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21763,"byte_end":21766,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21771,"byte_end":21851,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21856,"byte_end":21928,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21933,"byte_end":21936,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21941,"byte_end":21955,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21960,"byte_end":21963,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21968,"byte_end":21975,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":21980,"byte_end":22021,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22026,"byte_end":22061,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22066,"byte_end":22069,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22074,"byte_end":22088,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22093,"byte_end":22121,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22126,"byte_end":22162,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22167,"byte_end":22179,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22184,"byte_end":22222,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22227,"byte_end":22233,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22238,"byte_end":22241,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22246,"byte_end":22281,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22286,"byte_end":22295,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22300,"byte_end":22307,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23165,"byte_end":23177,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22506,"byte_end":22582,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22587,"byte_end":22608,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22613,"byte_end":22616,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22621,"byte_end":22700,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22705,"byte_end":22777,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22782,"byte_end":22785,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22790,"byte_end":22804,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22809,"byte_end":22812,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22817,"byte_end":22824,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22829,"byte_end":22870,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22875,"byte_end":22910,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22915,"byte_end":22918,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22923,"byte_end":22937,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22942,"byte_end":22970,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":22975,"byte_end":23011,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23016,"byte_end":23028,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23033,"byte_end":23071,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23076,"byte_end":23082,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23087,"byte_end":23090,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23095,"byte_end":23131,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23136,"byte_end":23145,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23150,"byte_end":23157,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23956,"byte_end":23967,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23358,"byte_end":23411,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23416,"byte_end":23419,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23424,"byte_end":23498,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23503,"byte_end":23566,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23571,"byte_end":23574,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23579,"byte_end":23593,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23598,"byte_end":23601,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23606,"byte_end":23613,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23618,"byte_end":23659,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23664,"byte_end":23699,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23704,"byte_end":23739,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23744,"byte_end":23747,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23752,"byte_end":23782,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23787,"byte_end":23825,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23830,"byte_end":23881,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23886,"byte_end":23922,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23927,"byte_end":23936,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":23941,"byte_end":23948,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24832,"byte_end":24839,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24106,"byte_end":24170,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24175,"byte_end":24211,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24216,"byte_end":24219,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24224,"byte_end":24293,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24298,"byte_end":24335,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24340,"byte_end":24343,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24348,"byte_end":24408,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24413,"byte_end":24416,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24421,"byte_end":24492,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24497,"byte_end":24523,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24528,"byte_end":24531,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24536,"byte_end":24550,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24555,"byte_end":24558,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24563,"byte_end":24570,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24575,"byte_end":24616,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24621,"byte_end":24656,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24661,"byte_end":24664,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24669,"byte_end":24715,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24720,"byte_end":24761,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24766,"byte_end":24798,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24803,"byte_end":24812,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":24817,"byte_end":24824,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25944,"byte_end":25958,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25053,"byte_end":25128,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25133,"byte_end":25156,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25161,"byte_end":25164,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25169,"byte_end":25241,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25246,"byte_end":25319,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25324,"byte_end":25338,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25343,"byte_end":25346,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25351,"byte_end":25421,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25426,"byte_end":25444,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25449,"byte_end":25452,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25457,"byte_end":25471,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25476,"byte_end":25479,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25484,"byte_end":25491,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25496,"byte_end":25537,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25542,"byte_end":25577,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25582,"byte_end":25625,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25630,"byte_end":25633,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25638,"byte_end":25678,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25683,"byte_end":25749,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25754,"byte_end":25757,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25762,"byte_end":25815,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25820,"byte_end":25866,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25871,"byte_end":25910,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25915,"byte_end":25924,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":25929,"byte_end":25936,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27046,"byte_end":27050,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26151,"byte_end":26224,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26229,"byte_end":26295,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26300,"byte_end":26318,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26323,"byte_end":26326,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26331,"byte_end":26398,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26403,"byte_end":26468,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26473,"byte_end":26545,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26550,"byte_end":26624,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26629,"byte_end":26655,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26660,"byte_end":26663,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26668,"byte_end":26739,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26744,"byte_end":26819,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26824,"byte_end":26878,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26883,"byte_end":26886,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26891,"byte_end":26965,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":26970,"byte_end":27038,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27890,"byte_end":27897,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27196,"byte_end":27262,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27267,"byte_end":27270,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27275,"byte_end":27350,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27355,"byte_end":27428,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27433,"byte_end":27502,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27507,"byte_end":27557,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27562,"byte_end":27565,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27570,"byte_end":27584,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27589,"byte_end":27592,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27597,"byte_end":27604,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27609,"byte_end":27650,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27655,"byte_end":27690,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27695,"byte_end":27698,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27703,"byte_end":27732,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27737,"byte_end":27815,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27820,"byte_end":27856,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27861,"byte_end":27870,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":27875,"byte_end":27882,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33133,"byte_end":33143,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33000,"byte_end":33049,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33054,"byte_end":33125,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33428,"byte_end":33439,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33292,"byte_end":33341,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33346,"byte_end":33420,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33670,"byte_end":33680,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33593,"byte_end":33662,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":35076,"byte_end":35088,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33816,"byte_end":33888,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33893,"byte_end":33956,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33961,"byte_end":33964,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":33969,"byte_end":34035,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34040,"byte_end":34043,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34048,"byte_end":34121,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34126,"byte_end":34195,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34200,"byte_end":34270,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34275,"byte_end":34278,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34283,"byte_end":34297,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34302,"byte_end":34305,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34310,"byte_end":34317,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34322,"byte_end":34352,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34357,"byte_end":34407,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34412,"byte_end":34451,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34456,"byte_end":34507,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34512,"byte_end":34515,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34520,"byte_end":34580,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34585,"byte_end":34637,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34642,"byte_end":34649,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34654,"byte_end":34657,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34662,"byte_end":34731,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34736,"byte_end":34809,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34814,"byte_end":34846,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34851,"byte_end":34854,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34859,"byte_end":34866,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34871,"byte_end":34918,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34923,"byte_end":34962,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34967,"byte_end":34970,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":34975,"byte_end":35056,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":35061,"byte_end":35068,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":66428,"byte_end":66438,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":5318}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":5354},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67412,"byte_end":67417,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":5351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5356},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67446,"byte_end":67452,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":5351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5358},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67481,"byte_end":67486,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":5351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5351},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67379,"byte_end":67389,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5354},{"krate":0,"index":5356},{"krate":0,"index":5358}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5401},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72355,"byte_end":72360,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":5398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5403},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72389,"byte_end":72395,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":5398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5405},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72424,"byte_end":72429,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":5398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5398},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72319,"byte_end":72332,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":5401},{"krate":0,"index":5403},{"krate":0,"index":5405}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5444},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":45263,"byte_end":45273,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5447}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5505},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":45521,"byte_end":45534,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":5508}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5565},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":45802,"byte_end":45818,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":5567}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5616},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":46406,"byte_end":46413,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":5620}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5690},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":46653,"byte_end":46659,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":5694}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5763},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":46909,"byte_end":46916,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5766}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5824},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":47124,"byte_end":47130,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5827}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5885},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":47349,"byte_end":47358,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5888}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5946},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":47630,"byte_end":47640,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5949}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6007},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":48013,"byte_end":48018,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":6010}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6068},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":48259,"byte_end":48265,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":6071}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6130},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":48522,"byte_end":48533,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":6134}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6203},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":48817,"byte_end":48829,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":6206}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":484},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":49119,"byte_end":49131,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":49055,"byte_end":49108,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51891,"byte_end":51897,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50519,"byte_end":50577,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50582,"byte_end":50585,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50590,"byte_end":50665,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50670,"byte_end":50740,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50745,"byte_end":50818,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50823,"byte_end":50852,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50857,"byte_end":50860,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50865,"byte_end":50940,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":50945,"byte_end":51020,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51025,"byte_end":51072,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51077,"byte_end":51080,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51085,"byte_end":51160,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51165,"byte_end":51191,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51196,"byte_end":51199,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51204,"byte_end":51218,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51223,"byte_end":51226,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51231,"byte_end":51238,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51243,"byte_end":51281,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51286,"byte_end":51289,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51294,"byte_end":51335,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51340,"byte_end":51385,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51390,"byte_end":51432,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51437,"byte_end":51473,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51478,"byte_end":51487,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51492,"byte_end":51499,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51504,"byte_end":51507,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51512,"byte_end":51584,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51589,"byte_end":51600,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51605,"byte_end":51608,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51613,"byte_end":51620,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51625,"byte_end":51663,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51668,"byte_end":51671,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51676,"byte_end":51717,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51722,"byte_end":51768,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51773,"byte_end":51815,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51820,"byte_end":51857,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51862,"byte_end":51871,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":51876,"byte_end":51883,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53456,"byte_end":53470,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52088,"byte_end":52205,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52210,"byte_end":52213,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52218,"byte_end":52340,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52345,"byte_end":52395,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52400,"byte_end":52403,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52408,"byte_end":52483,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52488,"byte_end":52563,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52568,"byte_end":52615,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52620,"byte_end":52623,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52628,"byte_end":52703,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52708,"byte_end":52783,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52788,"byte_end":52835,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52840,"byte_end":52843,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52848,"byte_end":52923,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52928,"byte_end":52954,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52959,"byte_end":52962,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52967,"byte_end":52981,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52986,"byte_end":52989,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":52994,"byte_end":53001,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53006,"byte_end":53044,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53049,"byte_end":53052,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53057,"byte_end":53098,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53103,"byte_end":53148,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53153,"byte_end":53214,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53219,"byte_end":53251,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53256,"byte_end":53259,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53264,"byte_end":53310,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53315,"byte_end":53376,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53381,"byte_end":53414,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53419,"byte_end":53428,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53433,"byte_end":53440,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53445,"byte_end":53448,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55153,"byte_end":55160,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53704,"byte_end":53760,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53765,"byte_end":53768,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53773,"byte_end":53847,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53852,"byte_end":53913,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53918,"byte_end":53988,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":53993,"byte_end":54068,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54073,"byte_end":54108,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54113,"byte_end":54116,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54121,"byte_end":54196,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54201,"byte_end":54276,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54281,"byte_end":54328,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54333,"byte_end":54336,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54341,"byte_end":54416,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54421,"byte_end":54447,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54452,"byte_end":54455,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54460,"byte_end":54474,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54479,"byte_end":54482,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54487,"byte_end":54494,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54499,"byte_end":54537,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54542,"byte_end":54545,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54550,"byte_end":54591,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54596,"byte_end":54642,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54647,"byte_end":54690,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54695,"byte_end":54732,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54737,"byte_end":54746,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54751,"byte_end":54758,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54763,"byte_end":54766,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54771,"byte_end":54844,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54849,"byte_end":54863,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54868,"byte_end":54871,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54876,"byte_end":54883,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54888,"byte_end":54926,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54931,"byte_end":54934,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54939,"byte_end":54980,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":54985,"byte_end":55030,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55035,"byte_end":55078,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55083,"byte_end":55119,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55124,"byte_end":55133,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55138,"byte_end":55145,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56250,"byte_end":56258,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55353,"byte_end":55423,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55428,"byte_end":55477,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55482,"byte_end":55485,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55490,"byte_end":55553,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55558,"byte_end":55626,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55631,"byte_end":55704,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55709,"byte_end":55785,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55790,"byte_end":55835,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55840,"byte_end":55843,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55848,"byte_end":55923,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55928,"byte_end":55954,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55959,"byte_end":55962,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55967,"byte_end":55981,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55986,"byte_end":55989,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":55994,"byte_end":56001,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56006,"byte_end":56044,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56049,"byte_end":56052,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56057,"byte_end":56098,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56103,"byte_end":56154,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56159,"byte_end":56216,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56221,"byte_end":56230,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56235,"byte_end":56242,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56554,"byte_end":56561,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56434,"byte_end":56492,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56497,"byte_end":56546,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58116,"byte_end":58124,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56735,"byte_end":56804,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56809,"byte_end":56883,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56888,"byte_end":56891,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56896,"byte_end":56971,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":56976,"byte_end":57046,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57051,"byte_end":57116,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57121,"byte_end":57187,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57192,"byte_end":57226,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57231,"byte_end":57234,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57239,"byte_end":57314,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57319,"byte_end":57345,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57350,"byte_end":57353,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57358,"byte_end":57372,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57377,"byte_end":57380,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57385,"byte_end":57392,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57397,"byte_end":57435,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57440,"byte_end":57443,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57448,"byte_end":57489,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57494,"byte_end":57539,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57544,"byte_end":57619,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57624,"byte_end":57660,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57665,"byte_end":57674,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57679,"byte_end":57686,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57691,"byte_end":57694,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57699,"byte_end":57775,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57780,"byte_end":57791,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57796,"byte_end":57799,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57804,"byte_end":57811,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57816,"byte_end":57854,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57859,"byte_end":57862,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57867,"byte_end":57908,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57913,"byte_end":57959,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":57964,"byte_end":58040,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58045,"byte_end":58082,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58087,"byte_end":58096,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58101,"byte_end":58108,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59745,"byte_end":59752,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58378,"byte_end":58443,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58448,"byte_end":58520,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58525,"byte_end":58528,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58533,"byte_end":58608,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58613,"byte_end":58683,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58688,"byte_end":58753,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58758,"byte_end":58834,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58839,"byte_end":58857,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58862,"byte_end":58865,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58870,"byte_end":58945,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58950,"byte_end":58976,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58981,"byte_end":58984,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":58989,"byte_end":59003,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59008,"byte_end":59011,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59016,"byte_end":59023,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59028,"byte_end":59066,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59071,"byte_end":59074,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59079,"byte_end":59120,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59125,"byte_end":59171,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59176,"byte_end":59251,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59256,"byte_end":59293,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59298,"byte_end":59307,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59312,"byte_end":59319,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59324,"byte_end":59327,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59332,"byte_end":59405,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59410,"byte_end":59424,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59429,"byte_end":59432,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59437,"byte_end":59444,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59449,"byte_end":59487,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59492,"byte_end":59495,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59500,"byte_end":59541,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59546,"byte_end":59591,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59596,"byte_end":59670,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59675,"byte_end":59711,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59716,"byte_end":59725,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":59730,"byte_end":59737,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60728,"byte_end":60738,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60001,"byte_end":60074,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60079,"byte_end":60082,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60087,"byte_end":60162,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60167,"byte_end":60240,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60245,"byte_end":60314,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60319,"byte_end":60372,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60377,"byte_end":60380,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60385,"byte_end":60399,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60404,"byte_end":60407,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60412,"byte_end":60419,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60424,"byte_end":60465,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60470,"byte_end":60508,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60513,"byte_end":60516,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60521,"byte_end":60563,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60568,"byte_end":60649,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60654,"byte_end":60694,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60699,"byte_end":60708,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60713,"byte_end":60720,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61664,"byte_end":61675,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":60937,"byte_end":61008,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61013,"byte_end":61016,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61021,"byte_end":61096,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61101,"byte_end":61174,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61179,"byte_end":61248,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61253,"byte_end":61307,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61312,"byte_end":61315,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61320,"byte_end":61334,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61339,"byte_end":61342,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61347,"byte_end":61354,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61359,"byte_end":61400,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61405,"byte_end":61443,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61448,"byte_end":61451,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61456,"byte_end":61499,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61504,"byte_end":61584,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61589,"byte_end":61630,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61635,"byte_end":61644,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61649,"byte_end":61656,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62060,"byte_end":62071,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61879,"byte_end":61954,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61959,"byte_end":61988,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":61993,"byte_end":61996,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62001,"byte_end":62052,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63250,"byte_end":63268,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62306,"byte_end":62381,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62386,"byte_end":62409,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62414,"byte_end":62417,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62422,"byte_end":62494,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62499,"byte_end":62572,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62577,"byte_end":62591,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62596,"byte_end":62599,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62604,"byte_end":62674,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62679,"byte_end":62697,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62702,"byte_end":62705,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62710,"byte_end":62724,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62729,"byte_end":62732,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62737,"byte_end":62744,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62749,"byte_end":62790,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62795,"byte_end":62833,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62838,"byte_end":62884,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62889,"byte_end":62892,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62897,"byte_end":62957,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":62962,"byte_end":63041,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63046,"byte_end":63049,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63054,"byte_end":63111,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63116,"byte_end":63168,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63173,"byte_end":63216,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63221,"byte_end":63230,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63235,"byte_end":63242,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64359,"byte_end":64373,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63528,"byte_end":63599,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63604,"byte_end":63641,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63646,"byte_end":63695,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63700,"byte_end":63703,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63708,"byte_end":63777,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63782,"byte_end":63855,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63860,"byte_end":63930,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63935,"byte_end":63953,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63958,"byte_end":63961,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":63966,"byte_end":64034,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64039,"byte_end":64042,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64047,"byte_end":64061,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64066,"byte_end":64069,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64074,"byte_end":64081,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64086,"byte_end":64124,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64129,"byte_end":64132,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64137,"byte_end":64178,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64183,"byte_end":64235,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64240,"byte_end":64287,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64292,"byte_end":64325,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64330,"byte_end":64339,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64344,"byte_end":64351,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65628,"byte_end":65639,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64927,"byte_end":64980,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":64985,"byte_end":65021,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65026,"byte_end":65029,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65034,"byte_end":65083,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65088,"byte_end":65155,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65160,"byte_end":65173,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65178,"byte_end":65181,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65186,"byte_end":65200,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65205,"byte_end":65208,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65213,"byte_end":65220,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65225,"byte_end":65284,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65289,"byte_end":65292,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65297,"byte_end":65316,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65321,"byte_end":65339,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65344,"byte_end":65416,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65421,"byte_end":65453,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65458,"byte_end":65465,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65470,"byte_end":65546,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65551,"byte_end":65554,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65559,"byte_end":65608,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65613,"byte_end":65620,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65898,"byte_end":65912,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65795,"byte_end":65868,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":65873,"byte_end":65890,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6261},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74081,"byte_end":74085,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":6263}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":73947,"byte_end":73984,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74002,"byte_end":74069,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74627,"byte_end":74631,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74190,"byte_end":74258,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74259,"byte_end":74262,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74263,"byte_end":74326,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74327,"byte_end":74330,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74331,"byte_end":74345,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74346,"byte_end":74349,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74350,"byte_end":74357,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74358,"byte_end":74399,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74400,"byte_end":74424,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74425,"byte_end":74428,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74429,"byte_end":74461,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74462,"byte_end":74489,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74490,"byte_end":74493,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74494,"byte_end":74531,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74532,"byte_end":74556,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74557,"byte_end":74564,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74565,"byte_end":74601,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74602,"byte_end":74611,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74612,"byte_end":74619,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6267},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75458,"byte_end":75465,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":6269}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75319,"byte_end":75361,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75379,"byte_end":75446,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":627},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75984,"byte_end":75991,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75606,"byte_end":75686,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75687,"byte_end":75700,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75701,"byte_end":75704,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75705,"byte_end":75767,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75768,"byte_end":75771,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75772,"byte_end":75786,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75787,"byte_end":75790,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75791,"byte_end":75804,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75805,"byte_end":75846,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75847,"byte_end":75871,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75872,"byte_end":75875,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75876,"byte_end":75911,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75912,"byte_end":75938,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75939,"byte_end":75958,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75959,"byte_end":75968,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75969,"byte_end":75976,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6275},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76763,"byte_end":76769,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76728,"byte_end":76758,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6278},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76836,"byte_end":76840,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76793,"byte_end":76831,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6281},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77002,"byte_end":77006,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":6273},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76859,"byte_end":76925,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76930,"byte_end":76997,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":6273},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76699,"byte_end":76708,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":6275},{"krate":0,"index":6278},{"krate":0,"index":6281}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76577,"byte_end":76614,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76615,"byte_end":76618,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":76619,"byte_end":76672,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77527,"byte_end":77537,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77066,"byte_end":77103,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77104,"byte_end":77107,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77108,"byte_end":77122,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77123,"byte_end":77126,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77127,"byte_end":77134,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77135,"byte_end":77176,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77177,"byte_end":77201,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77202,"byte_end":77227,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77228,"byte_end":77231,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77232,"byte_end":77281,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77282,"byte_end":77303,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77304,"byte_end":77356,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77357,"byte_end":77392,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77393,"byte_end":77448,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77449,"byte_end":77501,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77502,"byte_end":77511,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77512,"byte_end":77519,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77978,"byte_end":77988,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77680,"byte_end":77765,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77770,"byte_end":77841,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77846,"byte_end":77919,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77924,"byte_end":77952,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77957,"byte_end":77966,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":78336,"byte_end":78347,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":78216,"byte_end":78282,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":78287,"byte_end":78310,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":78315,"byte_end":78324,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6288},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":79972,"byte_end":79978,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":6286},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":79937,"byte_end":79967,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6291},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80045,"byte_end":80049,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":6286},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80002,"byte_end":80040,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6294},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80257,"byte_end":80261,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":6286},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80064,"byte_end":80133,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80138,"byte_end":80208,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80213,"byte_end":80252,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6286},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":79902,"byte_end":79914,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":6288},{"krate":0,"index":6291},{"krate":0,"index":6294}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":79762,"byte_end":79813,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":79814,"byte_end":79817,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":79818,"byte_end":79875,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":726},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80375,"byte_end":80389,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80327,"byte_end":80367,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80876,"byte_end":80886,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80567,"byte_end":80652,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80657,"byte_end":80728,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80733,"byte_end":80817,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80822,"byte_end":80850,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80855,"byte_end":80864,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":81236,"byte_end":81247,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":81113,"byte_end":81182,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":81187,"byte_end":81210,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":81215,"byte_end":81224,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6304},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":83458,"byte_end":83470,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":6306}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84588,"byte_end":84594,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84468,"byte_end":84508,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84509,"byte_end":84576,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85181,"byte_end":85188,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84645,"byte_end":84716,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84717,"byte_end":84720,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84721,"byte_end":84787,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84788,"byte_end":84791,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84792,"byte_end":84806,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84807,"byte_end":84810,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84811,"byte_end":84818,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84819,"byte_end":84860,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84861,"byte_end":84894,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84895,"byte_end":84934,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84935,"byte_end":84938,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84939,"byte_end":84996,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84997,"byte_end":85040,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85041,"byte_end":85046,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85047,"byte_end":85050,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85051,"byte_end":85092,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85093,"byte_end":85155,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85156,"byte_end":85165,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85166,"byte_end":85173,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6343},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":86122,"byte_end":86135,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":6345}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":867},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89543,"byte_end":89557,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88355,"byte_end":88428,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88429,"byte_end":88553,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88554,"byte_end":88557,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88558,"byte_end":88571,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88572,"byte_end":88575,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88576,"byte_end":88643,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88644,"byte_end":88647,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88648,"byte_end":88814,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88815,"byte_end":88940,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88941,"byte_end":88944,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88945,"byte_end":88959,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88960,"byte_end":88963,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88964,"byte_end":88971,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":88972,"byte_end":89013,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89014,"byte_end":89038,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89039,"byte_end":89042,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89043,"byte_end":89095,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89096,"byte_end":89129,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89130,"byte_end":89133,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89134,"byte_end":89195,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89196,"byte_end":89226,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89227,"byte_end":89236,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89237,"byte_end":89244,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89245,"byte_end":89248,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89249,"byte_end":89273,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89274,"byte_end":89277,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89278,"byte_end":89285,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89286,"byte_end":89327,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89328,"byte_end":89363,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89364,"byte_end":89411,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89412,"byte_end":89428,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89429,"byte_end":89488,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89489,"byte_end":89517,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89518,"byte_end":89527,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":89528,"byte_end":89535,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6377},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":89980,"byte_end":89985,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":89829,"byte_end":89876,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":89901,"byte_end":89968,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90108,"byte_end":90118,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90025,"byte_end":90082,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90087,"byte_end":90096,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":909},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90784,"byte_end":90789,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90538,"byte_end":90598,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90599,"byte_end":90602,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90603,"byte_end":90617,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90618,"byte_end":90621,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90622,"byte_end":90629,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90630,"byte_end":90671,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90672,"byte_end":90696,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90697,"byte_end":90700,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90701,"byte_end":90730,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90731,"byte_end":90758,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90759,"byte_end":90768,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90769,"byte_end":90776,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":911},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91124,"byte_end":91126,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90858,"byte_end":90925,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90926,"byte_end":90929,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90930,"byte_end":90944,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90945,"byte_end":90948,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90949,"byte_end":90956,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90957,"byte_end":90998,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90999,"byte_end":91023,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91024,"byte_end":91027,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91028,"byte_end":91066,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91067,"byte_end":91098,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91099,"byte_end":91108,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91109,"byte_end":91116,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":914},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91457,"byte_end":91460,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91190,"byte_end":91256,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91257,"byte_end":91260,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91261,"byte_end":91275,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91276,"byte_end":91279,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91280,"byte_end":91287,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91288,"byte_end":91329,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91330,"byte_end":91354,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91355,"byte_end":91358,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91359,"byte_end":91398,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91399,"byte_end":91431,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91432,"byte_end":91441,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":91442,"byte_end":91449,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6479},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":93746,"byte_end":93750,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":6482},{"krate":0,"index":6483}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6524},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":93816,"byte_end":93821,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":6530}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6581},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":93893,"byte_end":93898,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6586},{"krate":0,"index":6587},{"krate":0,"index":6588},{"krate":0,"index":6589}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6650},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":93976,"byte_end":93981,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6656},{"krate":0,"index":6657},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6660}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":965},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94596,"byte_end":94600,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94019,"byte_end":94090,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94091,"byte_end":94094,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94095,"byte_end":94166,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94167,"byte_end":94242,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94243,"byte_end":94246,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94247,"byte_end":94316,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94317,"byte_end":94343,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94344,"byte_end":94347,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94348,"byte_end":94362,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94363,"byte_end":94366,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94367,"byte_end":94374,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94375,"byte_end":94416,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94417,"byte_end":94441,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94442,"byte_end":94445,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94446,"byte_end":94470,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94471,"byte_end":94495,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94496,"byte_end":94530,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94531,"byte_end":94534,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94535,"byte_end":94570,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94571,"byte_end":94580,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94581,"byte_end":94588,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95146,"byte_end":95151,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94807,"byte_end":94859,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94860,"byte_end":94863,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94864,"byte_end":94878,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94879,"byte_end":94882,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94883,"byte_end":94890,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94891,"byte_end":94932,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94933,"byte_end":94957,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94958,"byte_end":94961,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94962,"byte_end":94986,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":94987,"byte_end":95011,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95012,"byte_end":95036,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95037,"byte_end":95076,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95077,"byte_end":95080,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95081,"byte_end":95120,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95121,"byte_end":95130,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95131,"byte_end":95138,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":972},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95813,"byte_end":95818,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95443,"byte_end":95495,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95496,"byte_end":95499,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95500,"byte_end":95514,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95515,"byte_end":95518,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95519,"byte_end":95526,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95527,"byte_end":95568,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95569,"byte_end":95593,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95594,"byte_end":95597,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95598,"byte_end":95622,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95623,"byte_end":95647,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95648,"byte_end":95672,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95673,"byte_end":95697,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95698,"byte_end":95740,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95741,"byte_end":95744,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95745,"byte_end":95787,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95788,"byte_end":95797,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":95798,"byte_end":95805,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":977},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96583,"byte_end":96588,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96182,"byte_end":96234,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96235,"byte_end":96238,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96239,"byte_end":96253,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96254,"byte_end":96257,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96258,"byte_end":96265,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96266,"byte_end":96307,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96308,"byte_end":96332,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96333,"byte_end":96336,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96337,"byte_end":96361,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96362,"byte_end":96386,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96387,"byte_end":96411,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96412,"byte_end":96436,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96437,"byte_end":96461,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96462,"byte_end":96507,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96508,"byte_end":96511,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96512,"byte_end":96557,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96558,"byte_end":96567,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/join.rs","byte_start":96568,"byte_end":96575,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6731},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97339,"byte_end":97345,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6734}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97201,"byte_end":97242,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97243,"byte_end":97310,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1039},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99609,"byte_end":99615,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97436,"byte_end":97506,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97507,"byte_end":97510,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97511,"byte_end":97589,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97590,"byte_end":97666,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97667,"byte_end":97739,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97740,"byte_end":97743,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97744,"byte_end":97816,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97817,"byte_end":97845,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97846,"byte_end":97849,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97850,"byte_end":97917,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97918,"byte_end":97982,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97983,"byte_end":98033,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98034,"byte_end":98037,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98038,"byte_end":98052,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98053,"byte_end":98056,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98057,"byte_end":98077,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98078,"byte_end":98081,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98082,"byte_end":98089,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98090,"byte_end":98131,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98132,"byte_end":98150,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98151,"byte_end":98167,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98168,"byte_end":98191,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98192,"byte_end":98213,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98214,"byte_end":98220,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98221,"byte_end":98224,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98225,"byte_end":98316,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98317,"byte_end":98342,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98343,"byte_end":98402,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98403,"byte_end":98412,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98413,"byte_end":98419,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98420,"byte_end":98445,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98446,"byte_end":98476,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98477,"byte_end":98483,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98484,"byte_end":98487,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98488,"byte_end":98534,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98535,"byte_end":98557,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98558,"byte_end":98580,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98581,"byte_end":98584,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98585,"byte_end":98647,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98648,"byte_end":98732,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98733,"byte_end":98806,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98807,"byte_end":98891,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98892,"byte_end":98965,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98966,"byte_end":98972,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98973,"byte_end":98976,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":98977,"byte_end":99001,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99002,"byte_end":99011,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99012,"byte_end":99019,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99020,"byte_end":99023,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99024,"byte_end":99050,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99051,"byte_end":99054,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99055,"byte_end":99062,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99063,"byte_end":99122,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99123,"byte_end":99126,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99127,"byte_end":99180,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99181,"byte_end":99184,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99185,"byte_end":99260,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99261,"byte_end":99293,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99294,"byte_end":99326,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99327,"byte_end":99332,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99333,"byte_end":99377,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99378,"byte_end":99404,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99405,"byte_end":99482,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99483,"byte_end":99562,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99563,"byte_end":99576,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99577,"byte_end":99587,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99588,"byte_end":99593,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99594,"byte_end":99601,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6809},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":103594,"byte_end":103601,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6812},{"krate":0,"index":6813}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6854},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":103671,"byte_end":103679,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6858},{"krate":0,"index":6859},{"krate":0,"index":6860}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6911},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":103755,"byte_end":103763,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6980},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":103845,"byte_end":103853,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6990}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105126,"byte_end":105134,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":103891,"byte_end":103964,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":103965,"byte_end":103997,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":103998,"byte_end":104001,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104002,"byte_end":104073,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104074,"byte_end":104150,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104151,"byte_end":104223,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104224,"byte_end":104240,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104241,"byte_end":104244,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104245,"byte_end":104314,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104315,"byte_end":104341,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104342,"byte_end":104345,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104346,"byte_end":104360,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104361,"byte_end":104364,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104365,"byte_end":104441,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104442,"byte_end":104478,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104479,"byte_end":104482,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104483,"byte_end":104490,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104491,"byte_end":104532,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104533,"byte_end":104557,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104558,"byte_end":104561,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104562,"byte_end":104607,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104608,"byte_end":104653,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104654,"byte_end":104692,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104693,"byte_end":104696,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104697,"byte_end":104736,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104737,"byte_end":104746,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104747,"byte_end":104754,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104755,"byte_end":104758,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104759,"byte_end":104829,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104830,"byte_end":104845,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104846,"byte_end":104849,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104850,"byte_end":104857,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104858,"byte_end":104899,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104900,"byte_end":104924,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104925,"byte_end":104928,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104929,"byte_end":104974,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":104975,"byte_end":105021,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105022,"byte_end":105060,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105061,"byte_end":105064,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105065,"byte_end":105100,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105101,"byte_end":105110,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105111,"byte_end":105118,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1096},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105790,"byte_end":105799,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105372,"byte_end":105432,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105433,"byte_end":105436,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105437,"byte_end":105451,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105452,"byte_end":105455,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105456,"byte_end":105463,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105464,"byte_end":105505,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105506,"byte_end":105530,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105531,"byte_end":105534,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105535,"byte_end":105580,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105581,"byte_end":105626,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105627,"byte_end":105672,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105673,"byte_end":105716,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105717,"byte_end":105720,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105721,"byte_end":105764,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105765,"byte_end":105774,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":105775,"byte_end":105782,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106627,"byte_end":106636,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106157,"byte_end":106217,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106218,"byte_end":106221,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106222,"byte_end":106236,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106237,"byte_end":106240,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106241,"byte_end":106248,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106249,"byte_end":106290,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106291,"byte_end":106315,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106316,"byte_end":106319,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106320,"byte_end":106365,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106366,"byte_end":106411,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106412,"byte_end":106457,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106458,"byte_end":106503,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106504,"byte_end":106550,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106551,"byte_end":106554,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106555,"byte_end":106601,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106602,"byte_end":106611,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":106612,"byte_end":106619,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107608,"byte_end":107617,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107086,"byte_end":107146,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107147,"byte_end":107150,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107151,"byte_end":107165,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107166,"byte_end":107169,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107170,"byte_end":107177,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107178,"byte_end":107219,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107220,"byte_end":107244,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107245,"byte_end":107248,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107249,"byte_end":107294,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107295,"byte_end":107340,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107341,"byte_end":107386,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107387,"byte_end":107432,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107433,"byte_end":107478,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107479,"byte_end":107528,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107529,"byte_end":107532,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107533,"byte_end":107582,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107583,"byte_end":107592,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_join.rs","byte_start":107593,"byte_end":107600,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7061},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108453,"byte_end":108462,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":7064}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108311,"byte_end":108356,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108357,"byte_end":108424,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":110047,"byte_end":110057,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108556,"byte_end":108626,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108627,"byte_end":108630,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108631,"byte_end":108709,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108710,"byte_end":108786,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108787,"byte_end":108859,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108860,"byte_end":108863,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108864,"byte_end":108936,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108937,"byte_end":108965,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108966,"byte_end":108969,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108970,"byte_end":109037,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109038,"byte_end":109109,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109110,"byte_end":109160,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109161,"byte_end":109164,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109165,"byte_end":109179,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109180,"byte_end":109183,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109184,"byte_end":109191,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109192,"byte_end":109276,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109277,"byte_end":109280,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109281,"byte_end":109338,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109339,"byte_end":109342,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109343,"byte_end":109425,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109426,"byte_end":109483,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109484,"byte_end":109541,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109542,"byte_end":109568,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109569,"byte_end":109574,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109575,"byte_end":109670,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109671,"byte_end":109694,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109695,"byte_end":109775,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109776,"byte_end":109857,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109858,"byte_end":109928,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":109929,"byte_end":110000,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":110001,"byte_end":110014,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":110015,"byte_end":110025,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":110026,"byte_end":110031,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":110032,"byte_end":110039,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7072},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112091,"byte_end":112095,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112058,"byte_end":112086,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7075},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112151,"byte_end":112156,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":7069},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112117,"byte_end":112146,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":7069},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112039,"byte_end":112045,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":7072},{"krate":0,"index":7075}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111516,"byte_end":111622,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111623,"byte_end":111626,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111627,"byte_end":111708,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111709,"byte_end":111712,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111713,"byte_end":111724,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111725,"byte_end":111757,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111758,"byte_end":111761,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111762,"byte_end":111803,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111804,"byte_end":111824,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111825,"byte_end":111828,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111829,"byte_end":111852,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111853,"byte_end":111892,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111893,"byte_end":111905,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111906,"byte_end":111946,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111947,"byte_end":111953,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111954,"byte_end":111957,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111958,"byte_end":111988,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111989,"byte_end":111997,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":111998,"byte_end":112005,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112710,"byte_end":112722,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112562,"byte_end":112620,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112625,"byte_end":112628,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112633,"byte_end":112698,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113102,"byte_end":113115,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112953,"byte_end":113011,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113016,"byte_end":113019,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113024,"byte_end":113090,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113403,"byte_end":113413,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113330,"byte_end":113391,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1259},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2849},{"krate":0,"index":2852},{"krate":0,"index":2855},{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2891},{"krate":0,"index":2894},{"krate":0,"index":2897},{"krate":0,"index":2900},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2924},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3781},{"krate":0,"index":3784},{"krate":0,"index":3787},{"krate":0,"index":3790},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3799},{"krate":0,"index":3802},{"krate":0,"index":3805},{"krate":0,"index":3808},{"krate":0,"index":3811},{"krate":0,"index":3814},{"krate":0,"index":3817},{"krate":0,"index":3820},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3850},{"krate":0,"index":3853},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3934},{"krate":0,"index":3937},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3980},{"krate":0,"index":3983},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4030},{"krate":0,"index":4033},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4076},{"krate":0,"index":4079},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4119},{"krate":0,"index":4122},{"krate":0,"index":4150},{"krate":0,"index":4151},{"krate":0,"index":4154},{"krate":0,"index":4157},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4215},{"krate":0,"index":4218},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":4300},{"krate":0,"index":4303},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4369}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":119860,"byte_end":119885,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":119886,"byte_end":119889,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":119890,"byte_end":119915,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":119916,"byte_end":119919,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":119920,"byte_end":119993,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":119994,"byte_end":120019,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120020,"byte_end":120099,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120100,"byte_end":120137,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120138,"byte_end":120211,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/mod.rs","byte_start":120212,"byte_end":120242,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7093},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":176680,"byte_end":176685,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7096},{"krate":0,"index":7097}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7142},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":178810,"byte_end":178817,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7145},{"krate":0,"index":7146}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7193},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":180251,"byte_end":180256,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":7197},{"krate":0,"index":7198},{"krate":0,"index":7199}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7251},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":182090,"byte_end":182096,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":7253},{"krate":0,"index":7254}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7291},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":183723,"byte_end":183728,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":7293},{"krate":0,"index":7294}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7331},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":185375,"byte_end":185384,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":7333},{"krate":0,"index":7334}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7370},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":187016,"byte_end":187022,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7435},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":190416,"byte_end":190425,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7441}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7503},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":193431,"byte_end":193438,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7506},{"krate":0,"index":7507}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7551},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":125650,"byte_end":125657,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7553}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7604},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":195255,"byte_end":195259,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7609},{"krate":0,"index":7610},{"krate":0,"index":7611},{"krate":0,"index":7612}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7673},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":197716,"byte_end":197719,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":7677},{"krate":0,"index":7678},{"krate":0,"index":7679},{"krate":0,"index":7680}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7734},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":200292,"byte_end":200295,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":7738},{"krate":0,"index":7739},{"krate":0,"index":7740},{"krate":0,"index":7741}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7795},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":202894,"byte_end":202901,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7799},{"krate":0,"index":7800},{"krate":0,"index":7801}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7857},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":204858,"byte_end":204862,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7859},{"krate":0,"index":7860}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205314,"byte_end":205321,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205045,"byte_end":205107,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205112,"byte_end":205115,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205120,"byte_end":205188,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205193,"byte_end":205259,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205264,"byte_end":205302,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7896},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206680,"byte_end":206692,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7898}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206510,"byte_end":206583,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206601,"byte_end":206668,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207255,"byte_end":207262,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206863,"byte_end":206936,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206941,"byte_end":206958,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206963,"byte_end":206966,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206971,"byte_end":207052,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207057,"byte_end":207139,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207144,"byte_end":207223,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207228,"byte_end":207243,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207873,"byte_end":207880,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207327,"byte_end":207394,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207399,"byte_end":207430,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207435,"byte_end":207438,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207443,"byte_end":207516,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207521,"byte_end":207576,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207581,"byte_end":207584,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207589,"byte_end":207670,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207675,"byte_end":207757,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207762,"byte_end":207841,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207846,"byte_end":207861,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208506,"byte_end":208517,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":207953,"byte_end":208027,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208032,"byte_end":208063,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208068,"byte_end":208071,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208076,"byte_end":208149,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208154,"byte_end":208209,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208214,"byte_end":208217,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208222,"byte_end":208303,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208308,"byte_end":208390,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208395,"byte_end":208474,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208479,"byte_end":208494,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":209150,"byte_end":209160,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208630,"byte_end":208692,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208697,"byte_end":208700,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208705,"byte_end":208777,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208782,"byte_end":208853,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208858,"byte_end":208861,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208866,"byte_end":208947,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":208952,"byte_end":209034,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":209039,"byte_end":209118,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":209123,"byte_end":209138,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7905},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":126997,"byte_end":127004,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7908}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7971},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210184,"byte_end":210187,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7974},{"krate":0,"index":7975}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8024},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":127365,"byte_end":127372,"line_start":119,"line_end":119,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":8028}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8103},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":211847,"byte_end":211851,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":8106}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":211691,"byte_end":211750,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":211768,"byte_end":211835,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8111},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":212859,"byte_end":212873,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":8114}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":212675,"byte_end":212750,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":212751,"byte_end":212762,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":212780,"byte_end":212847,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8124},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":214464,"byte_end":214472,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":8126},{"krate":0,"index":8127}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":214905,"byte_end":214909,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":214757,"byte_end":214823,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":214828,"byte_end":214893,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215234,"byte_end":215243,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":214996,"byte_end":215058,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215063,"byte_end":215066,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215071,"byte_end":215144,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215149,"byte_end":215222,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216558,"byte_end":216566,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215679,"byte_end":215753,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215758,"byte_end":215823,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215828,"byte_end":215831,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215836,"byte_end":215850,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215855,"byte_end":215858,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215863,"byte_end":215870,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215875,"byte_end":215916,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215921,"byte_end":215964,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215969,"byte_end":215994,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":215999,"byte_end":216002,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216007,"byte_end":216063,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216068,"byte_end":216089,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216094,"byte_end":216097,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216102,"byte_end":216165,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216170,"byte_end":216224,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216229,"byte_end":216232,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216237,"byte_end":216313,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216318,"byte_end":216373,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216378,"byte_end":216398,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216403,"byte_end":216422,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216427,"byte_end":216436,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216441,"byte_end":216446,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216451,"byte_end":216454,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216459,"byte_end":216520,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216525,"byte_end":216534,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216539,"byte_end":216546,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216741,"byte_end":216754,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":216659,"byte_end":216729,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218745,"byte_end":218752,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217217,"byte_end":217290,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217295,"byte_end":217329,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217334,"byte_end":217337,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217342,"byte_end":217417,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217422,"byte_end":217462,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217467,"byte_end":217470,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217475,"byte_end":217489,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217494,"byte_end":217497,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217502,"byte_end":217542,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217547,"byte_end":217550,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217555,"byte_end":217562,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217567,"byte_end":217608,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217613,"byte_end":217656,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217661,"byte_end":217686,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217691,"byte_end":217694,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217699,"byte_end":217746,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217751,"byte_end":217772,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217777,"byte_end":217830,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217835,"byte_end":217903,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217908,"byte_end":217981,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":217986,"byte_end":218051,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218056,"byte_end":218140,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218145,"byte_end":218190,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218195,"byte_end":218204,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218209,"byte_end":218216,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218221,"byte_end":218224,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218229,"byte_end":218265,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218270,"byte_end":218273,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218278,"byte_end":218285,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218290,"byte_end":218331,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218336,"byte_end":218379,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218384,"byte_end":218409,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218414,"byte_end":218417,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218422,"byte_end":218470,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218475,"byte_end":218496,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218501,"byte_end":218540,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218545,"byte_end":218610,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218615,"byte_end":218656,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218661,"byte_end":218707,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218712,"byte_end":218721,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218726,"byte_end":218733,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219776,"byte_end":219786,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218918,"byte_end":218991,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":218996,"byte_end":219020,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219025,"byte_end":219028,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219033,"byte_end":219046,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219051,"byte_end":219054,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219059,"byte_end":219099,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219104,"byte_end":219107,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219112,"byte_end":219119,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219124,"byte_end":219165,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219170,"byte_end":219213,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219218,"byte_end":219243,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219248,"byte_end":219251,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219256,"byte_end":219303,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219308,"byte_end":219329,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219334,"byte_end":219387,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219392,"byte_end":219454,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219459,"byte_end":219532,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219537,"byte_end":219596,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219601,"byte_end":219688,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219693,"byte_end":219738,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219743,"byte_end":219752,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":219757,"byte_end":219764,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8163},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":221304,"byte_end":221308,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":8166}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8204},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":222366,"byte_end":222373,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":8207}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8245},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":223456,"byte_end":223462,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":8249}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8294},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":225326,"byte_end":225334,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":8298}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8348},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":226951,"byte_end":226955,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8350},{"krate":0,"index":8351}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8387},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":228718,"byte_end":228727,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":8391},{"krate":0,"index":8392},{"krate":0,"index":8393},{"krate":0,"index":8394},{"krate":0,"index":8395}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8461},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":232231,"byte_end":232235,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8463},{"krate":0,"index":8464}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8500},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":234271,"byte_end":234280,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8504},{"krate":0,"index":8505},{"krate":0,"index":8506},{"krate":0,"index":8507},{"krate":0,"index":8508}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8569},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":237760,"byte_end":237769,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8572},{"krate":0,"index":8573},{"krate":0,"index":8574},{"krate":0,"index":8575}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239053,"byte_end":239064,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":238753,"byte_end":238807,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":238812,"byte_end":238906,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":238911,"byte_end":238974,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":238979,"byte_end":239041,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240348,"byte_end":240359,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239201,"byte_end":239266,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239271,"byte_end":239328,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239333,"byte_end":239336,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239341,"byte_end":239406,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239411,"byte_end":239471,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239476,"byte_end":239479,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239484,"byte_end":239552,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239557,"byte_end":239600,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239605,"byte_end":239608,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239613,"byte_end":239627,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239632,"byte_end":239635,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239640,"byte_end":239647,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239652,"byte_end":239693,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239698,"byte_end":239722,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239727,"byte_end":239770,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239775,"byte_end":239803,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239808,"byte_end":239811,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239816,"byte_end":239854,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239859,"byte_end":239862,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239867,"byte_end":239885,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239890,"byte_end":239932,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239937,"byte_end":239952,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239957,"byte_end":239976,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":239981,"byte_end":240006,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240011,"byte_end":240027,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240032,"byte_end":240065,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240070,"byte_end":240079,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240084,"byte_end":240091,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240096,"byte_end":240099,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240104,"byte_end":240153,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240158,"byte_end":240212,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240217,"byte_end":240220,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240225,"byte_end":240272,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240277,"byte_end":240310,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240315,"byte_end":240324,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240329,"byte_end":240336,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240535,"byte_end":240545,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240438,"byte_end":240499,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240504,"byte_end":240523,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8626},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":242477,"byte_end":242481,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8630},{"krate":0,"index":8631},{"krate":0,"index":8632}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8694},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245021,"byte_end":245024,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8697},{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8700}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245542,"byte_end":245549,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245434,"byte_end":245508,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245513,"byte_end":245530,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245905,"byte_end":245912,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245643,"byte_end":245711,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245716,"byte_end":245747,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245752,"byte_end":245755,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245760,"byte_end":245833,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245838,"byte_end":245893,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246287,"byte_end":246298,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246018,"byte_end":246093,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246098,"byte_end":246129,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246134,"byte_end":246137,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246142,"byte_end":246215,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246220,"byte_end":246275,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246704,"byte_end":246714,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246468,"byte_end":246531,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246536,"byte_end":246539,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246544,"byte_end":246616,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246621,"byte_end":246692,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8744},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":249556,"byte_end":249560,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8749},{"krate":0,"index":8750},{"krate":0,"index":8751}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2754},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130837,"byte_end":130846,"line_start":226,"line_end":226,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2773},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2784},{"krate":0,"index":2787},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2799},{"krate":0,"index":2802},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2826}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130726,"byte_end":130800,"line_start":224,"line_end":224,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130801,"byte_end":130826,"line_start":225,"line_end":225,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131756,"byte_end":131760,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130861,"byte_end":130927,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130932,"byte_end":130935,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130940,"byte_end":131008,"line_start":229,"line_end":229,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131013,"byte_end":131088,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131093,"byte_end":131168,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131173,"byte_end":131227,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131232,"byte_end":131307,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131312,"byte_end":131322,"line_start":234,"line_end":234,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131327,"byte_end":131330,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131335,"byte_end":131349,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131354,"byte_end":131357,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131362,"byte_end":131369,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131374,"byte_end":131415,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131420,"byte_end":131463,"line_start":240,"line_end":240,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131468,"byte_end":131471,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131476,"byte_end":131517,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131522,"byte_end":131525,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131530,"byte_end":131575,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131580,"byte_end":131625,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131630,"byte_end":131675,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131680,"byte_end":131722,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131727,"byte_end":131736,"line_start":248,"line_end":248,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131741,"byte_end":131748,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132999,"byte_end":133010,"line_start":285,"line_end":285,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131902,"byte_end":131974,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":131979,"byte_end":132040,"line_start":258,"line_end":258,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132045,"byte_end":132048,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132053,"byte_end":132128,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132133,"byte_end":132187,"line_start":261,"line_end":261,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132192,"byte_end":132195,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132200,"byte_end":132273,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132278,"byte_end":132340,"line_start":264,"line_end":264,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132345,"byte_end":132420,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132425,"byte_end":132479,"line_start":266,"line_end":266,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132484,"byte_end":132559,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132564,"byte_end":132574,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132579,"byte_end":132582,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132587,"byte_end":132601,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132606,"byte_end":132609,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132614,"byte_end":132621,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132626,"byte_end":132667,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132672,"byte_end":132715,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132720,"byte_end":132723,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132728,"byte_end":132765,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132770,"byte_end":132773,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132778,"byte_end":132830,"line_start":278,"line_end":278,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132835,"byte_end":132865,"line_start":279,"line_end":279,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132870,"byte_end":132873,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132878,"byte_end":132930,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132935,"byte_end":132965,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132970,"byte_end":132979,"line_start":283,"line_end":283,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":132984,"byte_end":132991,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134011,"byte_end":134014,"line_start":315,"line_end":315,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133175,"byte_end":133250,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133255,"byte_end":133278,"line_start":293,"line_end":293,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133283,"byte_end":133286,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133291,"byte_end":133363,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133368,"byte_end":133432,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133437,"byte_end":133474,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133479,"byte_end":133482,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133487,"byte_end":133563,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133568,"byte_end":133639,"line_start":300,"line_end":300,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133644,"byte_end":133665,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133670,"byte_end":133673,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133678,"byte_end":133692,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133697,"byte_end":133700,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133705,"byte_end":133712,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133717,"byte_end":133758,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133763,"byte_end":133806,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133811,"byte_end":133814,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133819,"byte_end":133856,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133861,"byte_end":133900,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133905,"byte_end":133908,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133913,"byte_end":133977,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133982,"byte_end":133991,"line_start":313,"line_end":313,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":133996,"byte_end":134003,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135574,"byte_end":135583,"line_start":361,"line_end":361,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134181,"byte_end":134252,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134257,"byte_end":134276,"line_start":324,"line_end":324,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134281,"byte_end":134284,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134289,"byte_end":134354,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134359,"byte_end":134428,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134433,"byte_end":134444,"line_start":328,"line_end":328,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134449,"byte_end":134452,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134457,"byte_end":134532,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134537,"byte_end":134619,"line_start":331,"line_end":331,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134624,"byte_end":134642,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134647,"byte_end":134650,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134655,"byte_end":134678,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134683,"byte_end":134686,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134691,"byte_end":134766,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134771,"byte_end":134858,"line_start":337,"line_end":337,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134863,"byte_end":134919,"line_start":338,"line_end":338,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134924,"byte_end":134927,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134932,"byte_end":134944,"line_start":340,"line_end":340,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134949,"byte_end":134952,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":134957,"byte_end":135026,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135031,"byte_end":135056,"line_start":343,"line_end":343,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135061,"byte_end":135064,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135069,"byte_end":135083,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135088,"byte_end":135091,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135096,"byte_end":135103,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135108,"byte_end":135149,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135154,"byte_end":135197,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135202,"byte_end":135205,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135210,"byte_end":135261,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135266,"byte_end":135269,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135274,"byte_end":135314,"line_start":353,"line_end":353,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135319,"byte_end":135322,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135327,"byte_end":135379,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135384,"byte_end":135436,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135441,"byte_end":135493,"line_start":357,"line_end":357,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135498,"byte_end":135540,"line_start":358,"line_end":358,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135545,"byte_end":135554,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135559,"byte_end":135566,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136812,"byte_end":136818,"line_start":394,"line_end":394,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135727,"byte_end":135799,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135804,"byte_end":135831,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135836,"byte_end":135839,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135844,"byte_end":135919,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":135924,"byte_end":135995,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136000,"byte_end":136072,"line_start":373,"line_end":373,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136077,"byte_end":136151,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136156,"byte_end":136214,"line_start":375,"line_end":375,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136219,"byte_end":136222,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136227,"byte_end":136303,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136308,"byte_end":136382,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136387,"byte_end":136408,"line_start":379,"line_end":379,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136413,"byte_end":136416,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136421,"byte_end":136435,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136440,"byte_end":136443,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136448,"byte_end":136455,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136460,"byte_end":136501,"line_start":384,"line_end":384,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136506,"byte_end":136530,"line_start":385,"line_end":385,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136535,"byte_end":136578,"line_start":386,"line_end":386,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136583,"byte_end":136586,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136591,"byte_end":136629,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136634,"byte_end":136695,"line_start":389,"line_end":389,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136700,"byte_end":136703,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136708,"byte_end":136778,"line_start":391,"line_end":391,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136783,"byte_end":136792,"line_start":392,"line_end":392,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":136797,"byte_end":136804,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138143,"byte_end":138153,"line_start":428,"line_end":428,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137046,"byte_end":137121,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137126,"byte_end":137202,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137207,"byte_end":137210,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137215,"byte_end":137290,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137295,"byte_end":137370,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137375,"byte_end":137451,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137456,"byte_end":137521,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137526,"byte_end":137529,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137534,"byte_end":137610,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137615,"byte_end":137689,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137694,"byte_end":137719,"line_start":413,"line_end":413,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137724,"byte_end":137727,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137732,"byte_end":137746,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137751,"byte_end":137758,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137763,"byte_end":137804,"line_start":417,"line_end":417,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137809,"byte_end":137852,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137857,"byte_end":137860,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137865,"byte_end":137903,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137908,"byte_end":137958,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":137963,"byte_end":138014,"line_start":422,"line_end":422,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138019,"byte_end":138026,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138031,"byte_end":138034,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138039,"byte_end":138109,"line_start":425,"line_end":425,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138114,"byte_end":138123,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138128,"byte_end":138135,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139182,"byte_end":139186,"line_start":459,"line_end":459,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138385,"byte_end":138458,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138463,"byte_end":138491,"line_start":438,"line_end":438,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138496,"byte_end":138499,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138504,"byte_end":138578,"line_start":440,"line_end":440,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138583,"byte_end":138650,"line_start":441,"line_end":441,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138655,"byte_end":138700,"line_start":442,"line_end":442,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138705,"byte_end":138708,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138713,"byte_end":138789,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138794,"byte_end":138820,"line_start":445,"line_end":445,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138825,"byte_end":138828,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138833,"byte_end":138847,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138852,"byte_end":138855,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138860,"byte_end":138867,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138872,"byte_end":138913,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138918,"byte_end":138961,"line_start":451,"line_end":451,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138966,"byte_end":138969,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":138974,"byte_end":139011,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139016,"byte_end":139071,"line_start":454,"line_end":454,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139076,"byte_end":139079,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139084,"byte_end":139148,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139153,"byte_end":139162,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139167,"byte_end":139174,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140120,"byte_end":140127,"line_start":493,"line_end":493,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139395,"byte_end":139449,"line_start":468,"line_end":468,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139454,"byte_end":139509,"line_start":469,"line_end":469,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139514,"byte_end":139517,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139522,"byte_end":139590,"line_start":471,"line_end":471,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139595,"byte_end":139598,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139603,"byte_end":139617,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139622,"byte_end":139625,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139630,"byte_end":139637,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139642,"byte_end":139683,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139688,"byte_end":139719,"line_start":477,"line_end":477,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139724,"byte_end":139759,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139764,"byte_end":139784,"line_start":479,"line_end":479,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139789,"byte_end":139792,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139797,"byte_end":139834,"line_start":481,"line_end":481,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139839,"byte_end":139842,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139847,"byte_end":139874,"line_start":483,"line_end":483,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139879,"byte_end":139903,"line_start":484,"line_end":484,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139908,"byte_end":139950,"line_start":485,"line_end":485,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139955,"byte_end":139964,"line_start":486,"line_end":486,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139969,"byte_end":139976,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139981,"byte_end":139984,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":139989,"byte_end":140037,"line_start":489,"line_end":489,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140042,"byte_end":140086,"line_start":490,"line_end":490,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140091,"byte_end":140100,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140105,"byte_end":140112,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141246,"byte_end":141251,"line_start":530,"line_end":530,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140285,"byte_end":140336,"line_start":500,"line_end":500,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140341,"byte_end":140376,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140381,"byte_end":140384,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140389,"byte_end":140443,"line_start":503,"line_end":503,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140448,"byte_end":140505,"line_start":504,"line_end":504,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140510,"byte_end":140546,"line_start":505,"line_end":505,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140551,"byte_end":140554,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140559,"byte_end":140627,"line_start":507,"line_end":507,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140632,"byte_end":140635,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140640,"byte_end":140654,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140659,"byte_end":140662,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140667,"byte_end":140674,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140679,"byte_end":140720,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140725,"byte_end":140756,"line_start":513,"line_end":513,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140761,"byte_end":140796,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140801,"byte_end":140821,"line_start":515,"line_end":515,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140826,"byte_end":140829,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140834,"byte_end":140871,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140876,"byte_end":140879,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140884,"byte_end":140911,"line_start":519,"line_end":519,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140916,"byte_end":140959,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":140964,"byte_end":141007,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141012,"byte_end":141055,"line_start":522,"line_end":522,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141060,"byte_end":141067,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141072,"byte_end":141075,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141080,"byte_end":141134,"line_start":525,"line_end":525,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141139,"byte_end":141173,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141178,"byte_end":141212,"line_start":527,"line_end":527,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141217,"byte_end":141226,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141231,"byte_end":141238,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142547,"byte_end":142553,"line_start":571,"line_end":571,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141512,"byte_end":141574,"line_start":539,"line_end":539,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141579,"byte_end":141643,"line_start":540,"line_end":540,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141648,"byte_end":141651,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141656,"byte_end":141720,"line_start":542,"line_end":542,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141725,"byte_end":141790,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141795,"byte_end":141841,"line_start":544,"line_end":544,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141846,"byte_end":141849,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141854,"byte_end":141903,"line_start":546,"line_end":546,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141908,"byte_end":141948,"line_start":547,"line_end":547,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141953,"byte_end":141956,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141961,"byte_end":141975,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141980,"byte_end":141983,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":141988,"byte_end":141995,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142000,"byte_end":142041,"line_start":552,"line_end":552,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142046,"byte_end":142077,"line_start":553,"line_end":553,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142082,"byte_end":142117,"line_start":554,"line_end":554,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142122,"byte_end":142142,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142147,"byte_end":142150,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142155,"byte_end":142192,"line_start":557,"line_end":557,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142197,"byte_end":142200,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142205,"byte_end":142232,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142237,"byte_end":142268,"line_start":560,"line_end":560,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142273,"byte_end":142299,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142304,"byte_end":142370,"line_start":562,"line_end":562,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142375,"byte_end":142384,"line_start":563,"line_end":563,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142389,"byte_end":142396,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142401,"byte_end":142404,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142409,"byte_end":142444,"line_start":566,"line_end":566,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142449,"byte_end":142452,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142457,"byte_end":142513,"line_start":568,"line_end":568,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142518,"byte_end":142527,"line_start":569,"line_end":569,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142532,"byte_end":142539,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143617,"byte_end":143622,"line_start":602,"line_end":602,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142783,"byte_end":142814,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142819,"byte_end":142822,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142827,"byte_end":142894,"line_start":581,"line_end":581,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142899,"byte_end":142971,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":142976,"byte_end":143033,"line_start":583,"line_end":583,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143038,"byte_end":143041,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143046,"byte_end":143060,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143065,"byte_end":143068,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143073,"byte_end":143080,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143085,"byte_end":143126,"line_start":588,"line_end":588,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143131,"byte_end":143174,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143179,"byte_end":143201,"line_start":590,"line_end":590,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143206,"byte_end":143253,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143258,"byte_end":143261,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143266,"byte_end":143307,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143312,"byte_end":143353,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143358,"byte_end":143399,"line_start":595,"line_end":595,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143404,"byte_end":143445,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143450,"byte_end":143491,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143496,"byte_end":143537,"line_start":598,"line_end":598,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143542,"byte_end":143583,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143588,"byte_end":143597,"line_start":600,"line_end":600,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143602,"byte_end":143609,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144572,"byte_end":144576,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143757,"byte_end":143824,"line_start":609,"line_end":609,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143829,"byte_end":143881,"line_start":610,"line_end":610,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143886,"byte_end":143889,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143894,"byte_end":143964,"line_start":612,"line_end":612,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":143969,"byte_end":144045,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144050,"byte_end":144126,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144131,"byte_end":144201,"line_start":615,"line_end":615,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144206,"byte_end":144232,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144237,"byte_end":144240,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144245,"byte_end":144259,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144264,"byte_end":144267,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144272,"byte_end":144279,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144284,"byte_end":144325,"line_start":621,"line_end":621,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144330,"byte_end":144373,"line_start":622,"line_end":622,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144378,"byte_end":144381,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144386,"byte_end":144429,"line_start":624,"line_end":624,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144434,"byte_end":144503,"line_start":625,"line_end":625,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144508,"byte_end":144538,"line_start":626,"line_end":626,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144543,"byte_end":144552,"line_start":627,"line_end":627,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144557,"byte_end":144564,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145277,"byte_end":145280,"line_start":651,"line_end":651,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144811,"byte_end":144924,"line_start":638,"line_end":638,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144929,"byte_end":144932,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144937,"byte_end":144951,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144956,"byte_end":144959,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144964,"byte_end":144971,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":144976,"byte_end":145017,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145022,"byte_end":145065,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145070,"byte_end":145073,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145078,"byte_end":145122,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145127,"byte_end":145196,"line_start":647,"line_end":647,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145201,"byte_end":145243,"line_start":648,"line_end":648,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145248,"byte_end":145257,"line_start":649,"line_end":649,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145262,"byte_end":145269,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145967,"byte_end":145970,"line_start":673,"line_end":673,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145495,"byte_end":145608,"line_start":660,"line_end":660,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145613,"byte_end":145616,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145621,"byte_end":145635,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145640,"byte_end":145643,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145648,"byte_end":145655,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145660,"byte_end":145701,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145706,"byte_end":145749,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145754,"byte_end":145757,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145762,"byte_end":145806,"line_start":668,"line_end":668,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145811,"byte_end":145883,"line_start":669,"line_end":669,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145888,"byte_end":145933,"line_start":670,"line_end":670,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145938,"byte_end":145947,"line_start":671,"line_end":671,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":145952,"byte_end":145959,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147144,"byte_end":147151,"line_start":713,"line_end":713,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146185,"byte_end":146250,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146255,"byte_end":146258,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146263,"byte_end":146277,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146282,"byte_end":146285,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146290,"byte_end":146297,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146302,"byte_end":146343,"line_start":687,"line_end":687,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146348,"byte_end":146379,"line_start":688,"line_end":688,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146384,"byte_end":146419,"line_start":689,"line_end":689,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146424,"byte_end":146444,"line_start":690,"line_end":690,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146449,"byte_end":146452,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146457,"byte_end":146496,"line_start":692,"line_end":692,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146501,"byte_end":146540,"line_start":693,"line_end":693,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146545,"byte_end":146584,"line_start":694,"line_end":694,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146589,"byte_end":146592,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146597,"byte_end":146624,"line_start":696,"line_end":696,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146629,"byte_end":146668,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146673,"byte_end":146712,"line_start":698,"line_end":698,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146717,"byte_end":146724,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146729,"byte_end":146756,"line_start":700,"line_end":700,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146761,"byte_end":146800,"line_start":701,"line_end":701,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146805,"byte_end":146844,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146849,"byte_end":146856,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146861,"byte_end":146888,"line_start":704,"line_end":704,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146893,"byte_end":146934,"line_start":705,"line_end":705,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146939,"byte_end":146980,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146985,"byte_end":146992,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":146997,"byte_end":147000,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147005,"byte_end":147064,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147069,"byte_end":147110,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147115,"byte_end":147124,"line_start":711,"line_end":711,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147129,"byte_end":147136,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2791},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148413,"byte_end":148421,"line_start":746,"line_end":746,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147328,"byte_end":147400,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147405,"byte_end":147408,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147413,"byte_end":147490,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147495,"byte_end":147570,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147575,"byte_end":147651,"line_start":725,"line_end":725,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147656,"byte_end":147659,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147664,"byte_end":147746,"line_start":727,"line_end":727,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147751,"byte_end":147834,"line_start":728,"line_end":728,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147839,"byte_end":147842,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147847,"byte_end":147923,"line_start":730,"line_end":730,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":147928,"byte_end":148004,"line_start":731,"line_end":731,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148009,"byte_end":148030,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148035,"byte_end":148038,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148043,"byte_end":148057,"line_start":734,"line_end":734,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148062,"byte_end":148065,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148070,"byte_end":148077,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148082,"byte_end":148123,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148128,"byte_end":148171,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148176,"byte_end":148179,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148184,"byte_end":148221,"line_start":740,"line_end":740,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148226,"byte_end":148293,"line_start":741,"line_end":741,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148298,"byte_end":148301,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148306,"byte_end":148379,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148384,"byte_end":148393,"line_start":744,"line_end":744,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148398,"byte_end":148405,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149433,"byte_end":149437,"line_start":779,"line_end":779,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148624,"byte_end":148695,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148700,"byte_end":148730,"line_start":756,"line_end":756,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148735,"byte_end":148738,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148743,"byte_end":148818,"line_start":758,"line_end":758,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148823,"byte_end":148894,"line_start":759,"line_end":759,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148899,"byte_end":148939,"line_start":760,"line_end":760,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148944,"byte_end":148947,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148952,"byte_end":148966,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148971,"byte_end":148974,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148979,"byte_end":148986,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":148991,"byte_end":149032,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149037,"byte_end":149061,"line_start":766,"line_end":766,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149066,"byte_end":149109,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149114,"byte_end":149117,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149122,"byte_end":149160,"line_start":769,"line_end":769,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149165,"byte_end":149168,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149173,"byte_end":149217,"line_start":771,"line_end":771,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149222,"byte_end":149242,"line_start":772,"line_end":772,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149247,"byte_end":149310,"line_start":773,"line_end":773,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149315,"byte_end":149322,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149327,"byte_end":149330,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149335,"byte_end":149399,"line_start":776,"line_end":776,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149404,"byte_end":149413,"line_start":777,"line_end":777,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149418,"byte_end":149425,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150484,"byte_end":150494,"line_start":810,"line_end":810,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149706,"byte_end":149780,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149785,"byte_end":149808,"line_start":789,"line_end":789,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149813,"byte_end":149816,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149821,"byte_end":149894,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149899,"byte_end":149971,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":149976,"byte_end":150053,"line_start":793,"line_end":793,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150058,"byte_end":150069,"line_start":794,"line_end":794,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150074,"byte_end":150077,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150082,"byte_end":150096,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150101,"byte_end":150104,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150109,"byte_end":150116,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150121,"byte_end":150162,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150167,"byte_end":150191,"line_start":800,"line_end":800,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150196,"byte_end":150239,"line_start":801,"line_end":801,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150244,"byte_end":150247,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150252,"byte_end":150290,"line_start":803,"line_end":803,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150295,"byte_end":150298,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150303,"byte_end":150366,"line_start":805,"line_end":805,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150371,"byte_end":150374,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150379,"byte_end":150450,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150455,"byte_end":150464,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150469,"byte_end":150476,"line_start":809,"line_end":809,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151483,"byte_end":151493,"line_start":840,"line_end":840,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150728,"byte_end":150804,"line_start":819,"line_end":819,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150809,"byte_end":150832,"line_start":820,"line_end":820,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150837,"byte_end":150840,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150845,"byte_end":150920,"line_start":822,"line_end":822,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":150925,"byte_end":150997,"line_start":823,"line_end":823,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151002,"byte_end":151069,"line_start":824,"line_end":824,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151074,"byte_end":151077,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151082,"byte_end":151096,"line_start":826,"line_end":826,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151101,"byte_end":151104,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151109,"byte_end":151116,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151121,"byte_end":151162,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151167,"byte_end":151191,"line_start":830,"line_end":830,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151196,"byte_end":151239,"line_start":831,"line_end":831,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151244,"byte_end":151247,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151252,"byte_end":151290,"line_start":833,"line_end":833,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151295,"byte_end":151298,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151303,"byte_end":151366,"line_start":835,"line_end":835,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151371,"byte_end":151374,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151379,"byte_end":151449,"line_start":837,"line_end":837,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151454,"byte_end":151463,"line_start":838,"line_end":838,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151468,"byte_end":151475,"line_start":839,"line_end":839,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153009,"byte_end":153019,"line_start":885,"line_end":885,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151727,"byte_end":151797,"line_start":849,"line_end":849,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151802,"byte_end":151805,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151810,"byte_end":151881,"line_start":851,"line_end":851,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151886,"byte_end":151958,"line_start":852,"line_end":852,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":151963,"byte_end":152033,"line_start":853,"line_end":853,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152038,"byte_end":152041,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152046,"byte_end":152117,"line_start":855,"line_end":855,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152122,"byte_end":152208,"line_start":856,"line_end":856,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152213,"byte_end":152280,"line_start":857,"line_end":857,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152285,"byte_end":152349,"line_start":858,"line_end":858,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152354,"byte_end":152357,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152362,"byte_end":152376,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152381,"byte_end":152384,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152389,"byte_end":152396,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152401,"byte_end":152442,"line_start":863,"line_end":863,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152447,"byte_end":152471,"line_start":864,"line_end":864,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152476,"byte_end":152519,"line_start":865,"line_end":865,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152524,"byte_end":152552,"line_start":866,"line_end":866,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152557,"byte_end":152560,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152565,"byte_end":152603,"line_start":868,"line_end":868,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152608,"byte_end":152611,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152616,"byte_end":152634,"line_start":870,"line_end":870,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152639,"byte_end":152681,"line_start":871,"line_end":871,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152686,"byte_end":152701,"line_start":872,"line_end":872,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152706,"byte_end":152725,"line_start":873,"line_end":873,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152730,"byte_end":152755,"line_start":874,"line_end":874,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152760,"byte_end":152776,"line_start":875,"line_end":875,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152781,"byte_end":152808,"line_start":876,"line_end":876,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152813,"byte_end":152822,"line_start":877,"line_end":877,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152827,"byte_end":152834,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152839,"byte_end":152842,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152847,"byte_end":152892,"line_start":880,"line_end":880,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152897,"byte_end":152900,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152905,"byte_end":152975,"line_start":882,"line_end":882,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152980,"byte_end":152989,"line_start":883,"line_end":883,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":152994,"byte_end":153001,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154258,"byte_end":154266,"line_start":926,"line_end":926,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153200,"byte_end":153271,"line_start":893,"line_end":893,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153276,"byte_end":153319,"line_start":894,"line_end":894,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153324,"byte_end":153327,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153332,"byte_end":153407,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153412,"byte_end":153482,"line_start":897,"line_end":897,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153487,"byte_end":153525,"line_start":898,"line_end":898,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153530,"byte_end":153533,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153538,"byte_end":153613,"line_start":900,"line_end":900,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153618,"byte_end":153661,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153666,"byte_end":153669,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153674,"byte_end":153747,"line_start":903,"line_end":903,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153752,"byte_end":153795,"line_start":904,"line_end":904,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153800,"byte_end":153803,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153808,"byte_end":153822,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153827,"byte_end":153830,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153835,"byte_end":153842,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153847,"byte_end":153888,"line_start":909,"line_end":909,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153893,"byte_end":153917,"line_start":910,"line_end":910,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153922,"byte_end":153965,"line_start":911,"line_end":911,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153970,"byte_end":153973,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":153978,"byte_end":153996,"line_start":913,"line_end":913,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154001,"byte_end":154004,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154009,"byte_end":154014,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154019,"byte_end":154080,"line_start":916,"line_end":916,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154085,"byte_end":154107,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154112,"byte_end":154141,"line_start":918,"line_end":918,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154146,"byte_end":154157,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154162,"byte_end":154180,"line_start":920,"line_end":920,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154185,"byte_end":154190,"line_start":921,"line_end":921,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154195,"byte_end":154198,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154203,"byte_end":154224,"line_start":923,"line_end":923,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154229,"byte_end":154238,"line_start":924,"line_end":924,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":154243,"byte_end":154250,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157272,"byte_end":157276,"line_start":1011,"line_end":1011,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":156764,"byte_end":156835,"line_start":995,"line_end":995,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":156840,"byte_end":156843,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":156848,"byte_end":156921,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":156926,"byte_end":156961,"line_start":998,"line_end":998,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":156966,"byte_end":156969,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":156974,"byte_end":156988,"line_start":1000,"line_end":1000,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":156993,"byte_end":156996,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157001,"byte_end":157008,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157013,"byte_end":157054,"line_start":1003,"line_end":1003,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157059,"byte_end":157102,"line_start":1004,"line_end":1004,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157107,"byte_end":157110,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157115,"byte_end":157161,"line_start":1006,"line_end":1006,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157166,"byte_end":157169,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157174,"byte_end":157238,"line_start":1008,"line_end":1008,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157243,"byte_end":157252,"line_start":1009,"line_end":1009,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157257,"byte_end":157264,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157941,"byte_end":157945,"line_start":1034,"line_end":1034,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157414,"byte_end":157486,"line_start":1018,"line_end":1018,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157491,"byte_end":157494,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157499,"byte_end":157572,"line_start":1020,"line_end":1020,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157577,"byte_end":157623,"line_start":1021,"line_end":1021,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157628,"byte_end":157631,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157636,"byte_end":157650,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157655,"byte_end":157658,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157663,"byte_end":157670,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157675,"byte_end":157716,"line_start":1026,"line_end":1026,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157721,"byte_end":157764,"line_start":1027,"line_end":1027,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157769,"byte_end":157772,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157777,"byte_end":157823,"line_start":1029,"line_end":1029,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157828,"byte_end":157831,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157836,"byte_end":157907,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157912,"byte_end":157921,"line_start":1032,"line_end":1032,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":157926,"byte_end":157933,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159566,"byte_end":159570,"line_start":1080,"line_end":1080,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158083,"byte_end":158154,"line_start":1041,"line_end":1041,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158159,"byte_end":158232,"line_start":1042,"line_end":1042,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158237,"byte_end":158275,"line_start":1043,"line_end":1043,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158280,"byte_end":158283,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158288,"byte_end":158342,"line_start":1045,"line_end":1045,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158347,"byte_end":158419,"line_start":1046,"line_end":1046,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158424,"byte_end":158500,"line_start":1047,"line_end":1047,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158505,"byte_end":158573,"line_start":1048,"line_end":1048,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158578,"byte_end":158654,"line_start":1049,"line_end":1049,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158659,"byte_end":158681,"line_start":1050,"line_end":1050,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158686,"byte_end":158689,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158694,"byte_end":158761,"line_start":1052,"line_end":1052,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158766,"byte_end":158834,"line_start":1053,"line_end":1053,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158839,"byte_end":158852,"line_start":1054,"line_end":1054,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158857,"byte_end":158860,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158865,"byte_end":158879,"line_start":1056,"line_end":1056,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158884,"byte_end":158887,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158892,"byte_end":158899,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158904,"byte_end":158947,"line_start":1059,"line_end":1059,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":158952,"byte_end":158995,"line_start":1060,"line_end":1060,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159000,"byte_end":159028,"line_start":1061,"line_end":1061,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159033,"byte_end":159036,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159041,"byte_end":159059,"line_start":1063,"line_end":1063,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159064,"byte_end":159102,"line_start":1064,"line_end":1064,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159107,"byte_end":159122,"line_start":1065,"line_end":1065,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159127,"byte_end":159144,"line_start":1066,"line_end":1066,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159149,"byte_end":159191,"line_start":1067,"line_end":1067,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159196,"byte_end":159231,"line_start":1068,"line_end":1068,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159236,"byte_end":159280,"line_start":1069,"line_end":1069,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159285,"byte_end":159294,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159299,"byte_end":159313,"line_start":1071,"line_end":1071,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159318,"byte_end":159321,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159326,"byte_end":159369,"line_start":1073,"line_end":1073,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159374,"byte_end":159411,"line_start":1074,"line_end":1074,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159416,"byte_end":159453,"line_start":1075,"line_end":1075,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159458,"byte_end":159492,"line_start":1076,"line_end":1076,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159497,"byte_end":159531,"line_start":1077,"line_end":1077,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159536,"byte_end":159546,"line_start":1078,"line_end":1078,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159551,"byte_end":159558,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160499,"byte_end":160505,"line_start":1113,"line_end":1113,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159695,"byte_end":159742,"line_start":1087,"line_end":1087,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159747,"byte_end":159750,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159755,"byte_end":159829,"line_start":1089,"line_end":1089,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159834,"byte_end":159871,"line_start":1090,"line_end":1090,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159876,"byte_end":159879,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159884,"byte_end":159898,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159903,"byte_end":159906,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159911,"byte_end":159918,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159923,"byte_end":159964,"line_start":1095,"line_end":1095,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":159969,"byte_end":160012,"line_start":1096,"line_end":1096,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160017,"byte_end":160020,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160025,"byte_end":160065,"line_start":1098,"line_end":1098,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160070,"byte_end":160073,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160078,"byte_end":160107,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160112,"byte_end":160140,"line_start":1101,"line_end":1101,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160145,"byte_end":160202,"line_start":1102,"line_end":1102,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160207,"byte_end":160234,"line_start":1103,"line_end":1103,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160239,"byte_end":160262,"line_start":1104,"line_end":1104,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160267,"byte_end":160270,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160275,"byte_end":160310,"line_start":1106,"line_end":1106,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160315,"byte_end":160343,"line_start":1107,"line_end":1107,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160348,"byte_end":160405,"line_start":1108,"line_end":1108,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160410,"byte_end":160437,"line_start":1109,"line_end":1109,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160442,"byte_end":160465,"line_start":1110,"line_end":1110,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160470,"byte_end":160479,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":160484,"byte_end":160491,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166617,"byte_end":166620,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":165929,"byte_end":165977,"line_start":1258,"line_end":1258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":165982,"byte_end":165985,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":165990,"byte_end":166063,"line_start":1260,"line_end":1260,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166068,"byte_end":166140,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166145,"byte_end":166158,"line_start":1262,"line_end":1262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166163,"byte_end":166166,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166171,"byte_end":166185,"line_start":1264,"line_end":1264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166190,"byte_end":166193,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166198,"byte_end":166205,"line_start":1266,"line_end":1266,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166210,"byte_end":166251,"line_start":1267,"line_end":1267,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166256,"byte_end":166299,"line_start":1268,"line_end":1268,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166304,"byte_end":166307,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166312,"byte_end":166350,"line_start":1270,"line_end":1270,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166355,"byte_end":166394,"line_start":1271,"line_end":1271,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166399,"byte_end":166402,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166407,"byte_end":166441,"line_start":1273,"line_end":1273,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166446,"byte_end":166487,"line_start":1274,"line_end":1274,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166492,"byte_end":166520,"line_start":1275,"line_end":1275,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166525,"byte_end":166575,"line_start":1276,"line_end":1276,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166580,"byte_end":166589,"line_start":1277,"line_end":1277,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166594,"byte_end":166601,"line_start":1278,"line_end":1278,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166606,"byte_end":166609,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167528,"byte_end":167533,"line_start":1311,"line_end":1311,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166801,"byte_end":166838,"line_start":1288,"line_end":1288,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166843,"byte_end":166846,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166851,"byte_end":166922,"line_start":1290,"line_end":1290,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":166927,"byte_end":167003,"line_start":1291,"line_end":1291,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167008,"byte_end":167011,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167016,"byte_end":167023,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167028,"byte_end":167069,"line_start":1294,"line_end":1294,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167074,"byte_end":167117,"line_start":1295,"line_end":1295,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167122,"byte_end":167125,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167130,"byte_end":167187,"line_start":1297,"line_end":1297,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167192,"byte_end":167248,"line_start":1298,"line_end":1298,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167253,"byte_end":167256,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167261,"byte_end":167301,"line_start":1300,"line_end":1300,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167306,"byte_end":167309,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167314,"byte_end":167362,"line_start":1302,"line_end":1302,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167367,"byte_end":167395,"line_start":1303,"line_end":1303,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167400,"byte_end":167415,"line_start":1304,"line_end":1304,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167420,"byte_end":167439,"line_start":1305,"line_end":1305,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167444,"byte_end":167462,"line_start":1306,"line_end":1306,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167467,"byte_end":167482,"line_start":1307,"line_end":1307,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167487,"byte_end":167494,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167499,"byte_end":167508,"line_start":1309,"line_end":1309,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167513,"byte_end":167520,"line_start":1310,"line_end":1310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167871,"byte_end":167879,"line_start":1322,"line_end":1322,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167725,"byte_end":167780,"line_start":1319,"line_end":1319,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167785,"byte_end":167788,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":167793,"byte_end":167863,"line_start":1321,"line_end":1321,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":172826,"byte_end":172833,"line_start":1434,"line_end":1434,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":172523,"byte_end":172596,"line_start":1429,"line_end":1429,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":172601,"byte_end":172604,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":172609,"byte_end":172678,"line_start":1431,"line_end":1431,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":172683,"byte_end":172752,"line_start":1432,"line_end":1432,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":172757,"byte_end":172818,"line_start":1433,"line_end":1433,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173289,"byte_end":173300,"line_start":1447,"line_end":1447,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173010,"byte_end":173085,"line_start":1442,"line_end":1442,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173090,"byte_end":173111,"line_start":1443,"line_end":1443,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173116,"byte_end":173119,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173124,"byte_end":173204,"line_start":1445,"line_end":1445,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173209,"byte_end":173281,"line_start":1446,"line_end":1446,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173753,"byte_end":173765,"line_start":1460,"line_end":1460,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173474,"byte_end":173550,"line_start":1455,"line_end":1455,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173555,"byte_end":173576,"line_start":1456,"line_end":1456,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173581,"byte_end":173584,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173589,"byte_end":173668,"line_start":1458,"line_end":1458,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173673,"byte_end":173745,"line_start":1459,"line_end":1459,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174041,"byte_end":174056,"line_start":1470,"line_end":1470,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":173940,"byte_end":174011,"line_start":1468,"line_end":1468,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174016,"byte_end":174033,"line_start":1469,"line_end":1469,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":176157,"byte_end":176173,"line_start":1525,"line_end":1525,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":2754},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174203,"byte_end":174278,"line_start":1477,"line_end":1477,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174283,"byte_end":174293,"line_start":1478,"line_end":1478,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174298,"byte_end":174301,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174306,"byte_end":174379,"line_start":1480,"line_end":1480,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174384,"byte_end":174452,"line_start":1481,"line_end":1481,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174457,"byte_end":174505,"line_start":1482,"line_end":1482,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174510,"byte_end":174585,"line_start":1483,"line_end":1483,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174590,"byte_end":174666,"line_start":1484,"line_end":1484,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174671,"byte_end":174697,"line_start":1485,"line_end":1485,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174702,"byte_end":174705,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174710,"byte_end":174783,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174788,"byte_end":174858,"line_start":1488,"line_end":1488,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174863,"byte_end":174903,"line_start":1489,"line_end":1489,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174908,"byte_end":174911,"line_start":1490,"line_end":1490,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174916,"byte_end":174970,"line_start":1491,"line_end":1491,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":174975,"byte_end":175059,"line_start":1492,"line_end":1492,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175064,"byte_end":175067,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175072,"byte_end":175086,"line_start":1494,"line_end":1494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175091,"byte_end":175094,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175099,"byte_end":175106,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175111,"byte_end":175152,"line_start":1497,"line_end":1497,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175157,"byte_end":175191,"line_start":1498,"line_end":1498,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175196,"byte_end":175251,"line_start":1499,"line_end":1499,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175256,"byte_end":175259,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175264,"byte_end":175299,"line_start":1501,"line_end":1501,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175304,"byte_end":175354,"line_start":1502,"line_end":1502,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175359,"byte_end":175381,"line_start":1503,"line_end":1503,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175386,"byte_end":175396,"line_start":1504,"line_end":1504,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175401,"byte_end":175418,"line_start":1505,"line_end":1505,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175423,"byte_end":175449,"line_start":1506,"line_end":1506,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175454,"byte_end":175509,"line_start":1507,"line_end":1507,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175514,"byte_end":175543,"line_start":1508,"line_end":1508,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175548,"byte_end":175611,"line_start":1509,"line_end":1509,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175616,"byte_end":175662,"line_start":1510,"line_end":1510,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175667,"byte_end":175681,"line_start":1511,"line_end":1511,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175686,"byte_end":175755,"line_start":1512,"line_end":1512,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175760,"byte_end":175785,"line_start":1513,"line_end":1513,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175790,"byte_end":175843,"line_start":1514,"line_end":1514,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175848,"byte_end":175877,"line_start":1515,"line_end":1515,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175882,"byte_end":175895,"line_start":1516,"line_end":1516,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175900,"byte_end":175970,"line_start":1517,"line_end":1517,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":175975,"byte_end":176034,"line_start":1518,"line_end":1518,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":176039,"byte_end":176069,"line_start":1519,"line_end":1519,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":176074,"byte_end":176083,"line_start":1520,"line_end":1520,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":176088,"byte_end":176093,"line_start":1521,"line_end":1521,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":176098,"byte_end":176123,"line_start":1522,"line_end":1522,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":176128,"byte_end":176137,"line_start":1523,"line_end":1523,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":176142,"byte_end":176149,"line_start":1524,"line_end":1524,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8813},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":291347,"byte_end":291354,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8817},{"krate":0,"index":8818},{"krate":0,"index":8819}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8877},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":253356,"byte_end":253363,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8880}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8946},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":253611,"byte_end":253620,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8949}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9015},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":253921,"byte_end":253931,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9018}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9086},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":294096,"byte_end":294106,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9088}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9124},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":254357,"byte_end":254362,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9127}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9193},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":254639,"byte_end":254645,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9196}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9259},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":295454,"byte_end":295460,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9320},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298296,"byte_end":298303,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9323}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298129,"byte_end":298199,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298217,"byte_end":298284,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9328},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":299388,"byte_end":299398,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9332},{"krate":0,"index":9333},{"krate":0,"index":9334}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9385},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":301284,"byte_end":301293,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9389},{"krate":0,"index":9390},{"krate":0,"index":9391},{"krate":0,"index":9392}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9450},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":304428,"byte_end":304440,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9454},{"krate":0,"index":9455},{"krate":0,"index":9456}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9516},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":307445,"byte_end":307455,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9518},{"krate":0,"index":9519}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9562},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":309633,"byte_end":309643,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9565},{"krate":0,"index":9566}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9609},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":310992,"byte_end":311001,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9611},{"krate":0,"index":9612}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9644},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":312415,"byte_end":312422,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9649},{"krate":0,"index":9650},{"krate":0,"index":9651},{"krate":0,"index":9652}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":3568},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316870,"byte_end":316880,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315013,"byte_end":315089,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315090,"byte_end":315093,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315094,"byte_end":315170,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315171,"byte_end":315241,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315242,"byte_end":315301,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315302,"byte_end":315305,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315306,"byte_end":315384,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315385,"byte_end":315462,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315463,"byte_end":315527,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315528,"byte_end":315531,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315532,"byte_end":315604,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315605,"byte_end":315683,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315684,"byte_end":315713,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315714,"byte_end":315717,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315718,"byte_end":315795,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315796,"byte_end":315860,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315861,"byte_end":315913,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315914,"byte_end":315917,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315918,"byte_end":315995,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":315996,"byte_end":316068,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316069,"byte_end":316138,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316139,"byte_end":316217,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316218,"byte_end":316221,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316222,"byte_end":316235,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316236,"byte_end":316239,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316240,"byte_end":316247,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316248,"byte_end":316281,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316282,"byte_end":316305,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316306,"byte_end":316347,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316348,"byte_end":316394,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316395,"byte_end":316398,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316399,"byte_end":316458,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316459,"byte_end":316481,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316482,"byte_end":316516,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316517,"byte_end":316526,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316527,"byte_end":316530,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316531,"byte_end":316554,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316555,"byte_end":316594,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316595,"byte_end":316631,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316632,"byte_end":316675,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316676,"byte_end":316692,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316693,"byte_end":316713,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316714,"byte_end":316723,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316724,"byte_end":316731,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316732,"byte_end":316735,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316736,"byte_end":316801,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316802,"byte_end":316844,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316845,"byte_end":316854,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":316855,"byte_end":316862,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9713},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":317243,"byte_end":317252,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9717},{"krate":0,"index":9718},{"krate":0,"index":9719}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9770},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":319160,"byte_end":319172,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9774},{"krate":0,"index":9775},{"krate":0,"index":9776},{"krate":0,"index":9777},{"krate":0,"index":9778}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9839},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":322716,"byte_end":322728,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9843},{"krate":0,"index":9844},{"krate":0,"index":9845},{"krate":0,"index":9846},{"krate":0,"index":9847}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3710},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":257854,"byte_end":257866,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3742},{"krate":0,"index":3745},{"krate":0,"index":3749},{"krate":0,"index":3750},{"krate":0,"index":3754},{"krate":0,"index":3755}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":257792,"byte_end":257843,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258408,"byte_end":258416,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":257884,"byte_end":257958,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":257963,"byte_end":257989,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":257994,"byte_end":257997,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258002,"byte_end":258016,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258021,"byte_end":258024,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258029,"byte_end":258036,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258041,"byte_end":258082,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258087,"byte_end":258133,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258138,"byte_end":258141,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258146,"byte_end":258166,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258171,"byte_end":258216,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258221,"byte_end":258252,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258257,"byte_end":258260,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258265,"byte_end":258319,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258324,"byte_end":258375,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258380,"byte_end":258388,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258393,"byte_end":258400,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259112,"byte_end":259118,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258592,"byte_end":258665,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258670,"byte_end":258701,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258706,"byte_end":258709,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258714,"byte_end":258728,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258733,"byte_end":258736,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258741,"byte_end":258748,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258753,"byte_end":258794,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258799,"byte_end":258845,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258850,"byte_end":258853,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258858,"byte_end":258878,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258883,"byte_end":258924,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258929,"byte_end":258960,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258965,"byte_end":258968,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":258973,"byte_end":259026,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259031,"byte_end":259079,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259084,"byte_end":259092,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259097,"byte_end":259104,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259827,"byte_end":259834,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259308,"byte_end":259379,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259384,"byte_end":259415,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259420,"byte_end":259423,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259428,"byte_end":259442,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259447,"byte_end":259450,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259455,"byte_end":259462,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259467,"byte_end":259508,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259513,"byte_end":259559,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259564,"byte_end":259567,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259572,"byte_end":259592,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259597,"byte_end":259638,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259643,"byte_end":259675,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259680,"byte_end":259683,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259688,"byte_end":259741,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259746,"byte_end":259794,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259799,"byte_end":259807,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":259812,"byte_end":259819,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3719},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261439,"byte_end":261447,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260026,"byte_end":260102,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260107,"byte_end":260147,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260152,"byte_end":260155,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260160,"byte_end":260236,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260241,"byte_end":260317,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260322,"byte_end":260395,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260400,"byte_end":260442,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260447,"byte_end":260450,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260455,"byte_end":260528,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260533,"byte_end":260564,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260569,"byte_end":260572,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260577,"byte_end":260651,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260656,"byte_end":260730,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260735,"byte_end":260751,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260756,"byte_end":260759,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260764,"byte_end":260835,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260840,"byte_end":260866,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260871,"byte_end":260874,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260879,"byte_end":260951,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":260956,"byte_end":261005,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261010,"byte_end":261013,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261018,"byte_end":261032,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261037,"byte_end":261040,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261045,"byte_end":261052,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261057,"byte_end":261088,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261093,"byte_end":261117,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261122,"byte_end":261160,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261165,"byte_end":261168,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261173,"byte_end":261229,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261234,"byte_end":261237,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261242,"byte_end":261277,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261282,"byte_end":261321,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261326,"byte_end":261350,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261355,"byte_end":261371,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261376,"byte_end":261392,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261397,"byte_end":261407,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261412,"byte_end":261419,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261424,"byte_end":261431,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262599,"byte_end":262606,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261700,"byte_end":261765,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261770,"byte_end":261819,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261824,"byte_end":261827,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261832,"byte_end":261911,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261916,"byte_end":261990,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":261995,"byte_end":262071,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262076,"byte_end":262121,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262126,"byte_end":262129,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262134,"byte_end":262209,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262214,"byte_end":262254,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262259,"byte_end":262262,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262267,"byte_end":262376,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262381,"byte_end":262455,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262460,"byte_end":262476,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262481,"byte_end":262484,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262489,"byte_end":262560,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262565,"byte_end":262591,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3725},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263158,"byte_end":263168,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262855,"byte_end":262929,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262934,"byte_end":262944,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262949,"byte_end":262952,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":262957,"byte_end":263027,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263032,"byte_end":263108,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263113,"byte_end":263150,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263657,"byte_end":263668,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263366,"byte_end":263445,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263450,"byte_end":263453,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263458,"byte_end":263528,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263533,"byte_end":263607,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263612,"byte_end":263649,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264589,"byte_end":264600,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263871,"byte_end":263924,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263929,"byte_end":263973,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263978,"byte_end":263981,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":263986,"byte_end":264035,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264040,"byte_end":264113,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264118,"byte_end":264138,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264143,"byte_end":264146,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264151,"byte_end":264165,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264170,"byte_end":264173,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264178,"byte_end":264185,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264190,"byte_end":264249,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264254,"byte_end":264257,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264262,"byte_end":264281,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264286,"byte_end":264304,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264309,"byte_end":264381,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264386,"byte_end":264416,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264421,"byte_end":264428,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264433,"byte_end":264507,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264512,"byte_end":264515,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264520,"byte_end":264569,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264574,"byte_end":264581,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265495,"byte_end":265503,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264756,"byte_end":264830,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264835,"byte_end":264909,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264914,"byte_end":264926,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264931,"byte_end":264934,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":264939,"byte_end":265006,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265011,"byte_end":265083,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265088,"byte_end":265127,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265132,"byte_end":265135,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265140,"byte_end":265154,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265159,"byte_end":265162,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265167,"byte_end":265174,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265179,"byte_end":265220,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265225,"byte_end":265271,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265276,"byte_end":265279,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265284,"byte_end":265341,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265346,"byte_end":265349,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265354,"byte_end":265408,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265413,"byte_end":265462,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265467,"byte_end":265475,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265480,"byte_end":265487,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3731},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266855,"byte_end":266867,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265670,"byte_end":265739,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265744,"byte_end":265800,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265805,"byte_end":265808,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265813,"byte_end":265888,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265893,"byte_end":265963,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":265968,"byte_end":266006,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266011,"byte_end":266014,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266019,"byte_end":266097,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266102,"byte_end":266162,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266167,"byte_end":266224,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266229,"byte_end":266296,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266301,"byte_end":266331,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266336,"byte_end":266339,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266344,"byte_end":266358,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266363,"byte_end":266366,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266371,"byte_end":266378,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266383,"byte_end":266424,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266429,"byte_end":266453,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266458,"byte_end":266504,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266509,"byte_end":266512,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266517,"byte_end":266538,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266543,"byte_end":266546,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266551,"byte_end":266556,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266561,"byte_end":266622,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266627,"byte_end":266649,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266654,"byte_end":266718,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266723,"byte_end":266734,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266739,"byte_end":266778,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266783,"byte_end":266788,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266793,"byte_end":266796,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266801,"byte_end":266822,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266827,"byte_end":266835,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":266840,"byte_end":266847,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267880,"byte_end":267894,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267131,"byte_end":267205,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267210,"byte_end":267233,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267238,"byte_end":267241,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267246,"byte_end":267277,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267282,"byte_end":267359,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267364,"byte_end":267393,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267398,"byte_end":267401,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267406,"byte_end":267420,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267425,"byte_end":267428,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267433,"byte_end":267440,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267445,"byte_end":267486,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267491,"byte_end":267515,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267520,"byte_end":267566,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267571,"byte_end":267574,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267579,"byte_end":267648,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267653,"byte_end":267723,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267728,"byte_end":267731,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267736,"byte_end":267803,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267808,"byte_end":267847,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267852,"byte_end":267860,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":267865,"byte_end":267872,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268927,"byte_end":268941,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268171,"byte_end":268245,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268250,"byte_end":268273,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268278,"byte_end":268281,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268286,"byte_end":268317,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268322,"byte_end":268399,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268404,"byte_end":268433,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268438,"byte_end":268441,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268446,"byte_end":268460,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268465,"byte_end":268468,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268473,"byte_end":268480,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268485,"byte_end":268526,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268531,"byte_end":268555,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268560,"byte_end":268606,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268611,"byte_end":268614,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268619,"byte_end":268695,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268700,"byte_end":268770,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268775,"byte_end":268778,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268783,"byte_end":268850,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268855,"byte_end":268894,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268899,"byte_end":268907,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":268912,"byte_end":268919,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272328,"byte_end":272339,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271289,"byte_end":271341,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271346,"byte_end":271413,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271418,"byte_end":271421,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271426,"byte_end":271500,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271505,"byte_end":271586,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271591,"byte_end":271661,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271666,"byte_end":271669,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271674,"byte_end":271742,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271747,"byte_end":271750,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271755,"byte_end":271769,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271774,"byte_end":271777,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271782,"byte_end":271789,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271794,"byte_end":271835,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271840,"byte_end":271871,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271876,"byte_end":271914,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271919,"byte_end":271939,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271944,"byte_end":271947,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271952,"byte_end":271989,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":271994,"byte_end":271997,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272002,"byte_end":272029,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272034,"byte_end":272058,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272063,"byte_end":272109,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272114,"byte_end":272123,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272128,"byte_end":272171,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272176,"byte_end":272183,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272188,"byte_end":272191,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272196,"byte_end":272259,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272264,"byte_end":272295,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272300,"byte_end":272308,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":272313,"byte_end":272320,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275687,"byte_end":275697,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274399,"byte_end":274472,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274477,"byte_end":274511,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274516,"byte_end":274519,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274524,"byte_end":274599,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274604,"byte_end":274679,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274684,"byte_end":274757,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274762,"byte_end":274833,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274838,"byte_end":274888,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274893,"byte_end":274896,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274901,"byte_end":274972,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274977,"byte_end":274980,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":274985,"byte_end":275061,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275066,"byte_end":275136,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275141,"byte_end":275166,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275171,"byte_end":275174,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275179,"byte_end":275193,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275198,"byte_end":275205,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275210,"byte_end":275251,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275256,"byte_end":275280,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275285,"byte_end":275342,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275347,"byte_end":275350,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275355,"byte_end":275435,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275440,"byte_end":275483,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275488,"byte_end":275521,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275526,"byte_end":275533,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275538,"byte_end":275541,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275546,"byte_end":275594,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275599,"byte_end":275654,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275659,"byte_end":275667,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275672,"byte_end":275679,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3745},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277324,"byte_end":277338,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":275948,"byte_end":276010,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276015,"byte_end":276083,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276088,"byte_end":276122,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276127,"byte_end":276130,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276135,"byte_end":276210,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276215,"byte_end":276290,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276295,"byte_end":276371,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276376,"byte_end":276441,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276446,"byte_end":276449,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276454,"byte_end":276525,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276530,"byte_end":276533,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276538,"byte_end":276614,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276619,"byte_end":276693,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276698,"byte_end":276723,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276728,"byte_end":276731,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276736,"byte_end":276750,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276755,"byte_end":276762,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276767,"byte_end":276808,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276813,"byte_end":276870,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276875,"byte_end":276900,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276905,"byte_end":276908,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276913,"byte_end":276983,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":276988,"byte_end":277043,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277048,"byte_end":277110,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277115,"byte_end":277130,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277135,"byte_end":277142,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277147,"byte_end":277150,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277155,"byte_end":277176,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277181,"byte_end":277230,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277235,"byte_end":277291,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277296,"byte_end":277304,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277309,"byte_end":277316,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3749},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279030,"byte_end":279041,"line_start":752,"line_end":752,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277615,"byte_end":277680,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277685,"byte_end":277688,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277693,"byte_end":277766,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277771,"byte_end":277844,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277849,"byte_end":277922,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":277927,"byte_end":277997,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278002,"byte_end":278005,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278010,"byte_end":278024,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278029,"byte_end":278032,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278037,"byte_end":278044,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278049,"byte_end":278090,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278095,"byte_end":278126,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278131,"byte_end":278182,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278187,"byte_end":278207,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278212,"byte_end":278215,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278220,"byte_end":278259,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278264,"byte_end":278303,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278308,"byte_end":278347,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278352,"byte_end":278355,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278360,"byte_end":278387,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278392,"byte_end":278435,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278440,"byte_end":278447,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278452,"byte_end":278479,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278484,"byte_end":278527,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278532,"byte_end":278576,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278581,"byte_end":278588,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278593,"byte_end":278620,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278625,"byte_end":278670,"line_start":741,"line_end":741,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278675,"byte_end":278720,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278725,"byte_end":278769,"line_start":743,"line_end":743,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278774,"byte_end":278781,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278786,"byte_end":278789,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278794,"byte_end":278833,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278838,"byte_end":278887,"line_start":747,"line_end":747,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278892,"byte_end":278941,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":278946,"byte_end":278996,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279001,"byte_end":279010,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279015,"byte_end":279022,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3750},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280633,"byte_end":280641,"line_start":791,"line_end":791,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279346,"byte_end":279416,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279421,"byte_end":279481,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279486,"byte_end":279489,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279494,"byte_end":279564,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279569,"byte_end":279645,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279650,"byte_end":279726,"line_start":768,"line_end":768,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279731,"byte_end":279801,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279806,"byte_end":279832,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279837,"byte_end":279840,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279845,"byte_end":279925,"line_start":772,"line_end":772,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":279930,"byte_end":279999,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280004,"byte_end":280025,"line_start":774,"line_end":774,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280030,"byte_end":280033,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280038,"byte_end":280052,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280057,"byte_end":280060,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280065,"byte_end":280072,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280077,"byte_end":280118,"line_start":779,"line_end":779,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280123,"byte_end":280169,"line_start":780,"line_end":780,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280174,"byte_end":280177,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280182,"byte_end":280251,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280256,"byte_end":280333,"line_start":783,"line_end":783,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280338,"byte_end":280371,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280376,"byte_end":280379,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280384,"byte_end":280470,"line_start":786,"line_end":786,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280475,"byte_end":280561,"line_start":787,"line_end":787,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280566,"byte_end":280600,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280605,"byte_end":280613,"line_start":789,"line_end":789,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280618,"byte_end":280625,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":282167,"byte_end":282177,"line_start":834,"line_end":834,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280921,"byte_end":280983,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":280988,"byte_end":281063,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281068,"byte_end":281071,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281076,"byte_end":281147,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281152,"byte_end":281228,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281233,"byte_end":281272,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281277,"byte_end":281280,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281285,"byte_end":281371,"line_start":807,"line_end":807,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281376,"byte_end":281379,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281384,"byte_end":281468,"line_start":809,"line_end":809,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281473,"byte_end":281529,"line_start":810,"line_end":810,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281534,"byte_end":281537,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281542,"byte_end":281556,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281561,"byte_end":281564,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281569,"byte_end":281576,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281581,"byte_end":281622,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281627,"byte_end":281658,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281663,"byte_end":281701,"line_start":817,"line_end":817,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281706,"byte_end":281726,"line_start":818,"line_end":818,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281731,"byte_end":281734,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281739,"byte_end":281800,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281805,"byte_end":281808,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281813,"byte_end":281840,"line_start":822,"line_end":822,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281845,"byte_end":281876,"line_start":823,"line_end":823,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281881,"byte_end":281907,"line_start":824,"line_end":824,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281912,"byte_end":281982,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":281987,"byte_end":281996,"line_start":826,"line_end":826,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":282001,"byte_end":282008,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":282013,"byte_end":282016,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":282021,"byte_end":282060,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":282065,"byte_end":282068,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":282073,"byte_end":282133,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":282138,"byte_end":282147,"line_start":832,"line_end":832,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":282152,"byte_end":282159,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":288367,"byte_end":288386,"line_start":991,"line_end":991,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":288259,"byte_end":288337,"line_start":989,"line_end":989,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":288342,"byte_end":288359,"line_start":990,"line_end":990,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":9908},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326192,"byte_end":326196,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":9910}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326070,"byte_end":326107,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326132,"byte_end":326180,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3839},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326714,"byte_end":326718,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326248,"byte_end":326312,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326313,"byte_end":326341,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326342,"byte_end":326345,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326346,"byte_end":326419,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326420,"byte_end":326475,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326476,"byte_end":326479,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326480,"byte_end":326487,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326488,"byte_end":326529,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326530,"byte_end":326573,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326574,"byte_end":326577,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326578,"byte_end":326622,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326623,"byte_end":326688,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326689,"byte_end":326698,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326699,"byte_end":326706,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9917},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327409,"byte_end":327415,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9919}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327285,"byte_end":327324,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327349,"byte_end":327397,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3874},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327939,"byte_end":327945,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327437,"byte_end":327497,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327498,"byte_end":327501,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327502,"byte_end":327569,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327570,"byte_end":327642,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327643,"byte_end":327700,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327701,"byte_end":327704,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327705,"byte_end":327712,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327713,"byte_end":327754,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327755,"byte_end":327798,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327799,"byte_end":327802,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327803,"byte_end":327838,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327839,"byte_end":327913,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327914,"byte_end":327923,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":327924,"byte_end":327931,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9926},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":328936,"byte_end":328946,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":9928}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":328634,"byte_end":328694,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":328695,"byte_end":328747,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":328748,"byte_end":328751,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":328752,"byte_end":328815,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":328816,"byte_end":328851,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":328876,"byte_end":328924,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3927},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331234,"byte_end":331245,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329462,"byte_end":329533,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329534,"byte_end":329601,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329602,"byte_end":329605,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329606,"byte_end":329678,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329679,"byte_end":329682,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329683,"byte_end":329757,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329758,"byte_end":329810,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329811,"byte_end":329814,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329815,"byte_end":329887,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329888,"byte_end":329961,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329962,"byte_end":329999,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330000,"byte_end":330003,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330004,"byte_end":330018,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330019,"byte_end":330022,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330023,"byte_end":330039,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330040,"byte_end":330043,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330044,"byte_end":330051,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330052,"byte_end":330093,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330094,"byte_end":330137,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330138,"byte_end":330141,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330142,"byte_end":330210,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330211,"byte_end":330289,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330290,"byte_end":330321,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330322,"byte_end":330343,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330344,"byte_end":330347,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330348,"byte_end":330382,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330383,"byte_end":330438,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330439,"byte_end":330442,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330443,"byte_end":330496,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330497,"byte_end":330550,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330551,"byte_end":330604,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330605,"byte_end":330614,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330615,"byte_end":330622,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330623,"byte_end":330626,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330627,"byte_end":330663,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330664,"byte_end":330667,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330668,"byte_end":330679,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330680,"byte_end":330721,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330722,"byte_end":330765,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330766,"byte_end":330769,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330770,"byte_end":330819,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330820,"byte_end":330841,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330842,"byte_end":330919,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330920,"byte_end":330953,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330954,"byte_end":330957,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":330958,"byte_end":331001,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331002,"byte_end":331045,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331046,"byte_end":331089,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331090,"byte_end":331133,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331134,"byte_end":331137,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331138,"byte_end":331167,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331168,"byte_end":331208,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331209,"byte_end":331218,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":331219,"byte_end":331226,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9935},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331636,"byte_end":331641,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":9937}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331520,"byte_end":331558,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331576,"byte_end":331624,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3961},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331810,"byte_end":331815,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331680,"byte_end":331728,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331729,"byte_end":331732,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331733,"byte_end":331802,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":4013},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332900,"byte_end":332904,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332593,"byte_end":332634,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332635,"byte_end":332638,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332639,"byte_end":332646,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332647,"byte_end":332688,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332689,"byte_end":332732,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332733,"byte_end":332736,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332737,"byte_end":332781,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332782,"byte_end":332837,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332838,"byte_end":332874,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332875,"byte_end":332884,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":332885,"byte_end":332892,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9946},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":333166,"byte_end":333170,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9948}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9977},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334346,"byte_end":334353,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":9979}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334226,"byte_end":334268,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334286,"byte_end":334334,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4057},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334529,"byte_end":334536,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334397,"byte_end":334451,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334452,"byte_end":334455,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334456,"byte_end":334521,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4099},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335379,"byte_end":335385,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":4101}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335278,"byte_end":335318,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335319,"byte_end":335367,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4107},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":336073,"byte_end":336080,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335585,"byte_end":335658,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335659,"byte_end":335662,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335663,"byte_end":335722,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335723,"byte_end":335726,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335727,"byte_end":335741,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335742,"byte_end":335745,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335746,"byte_end":335753,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335754,"byte_end":335787,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335788,"byte_end":335816,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335817,"byte_end":335820,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335821,"byte_end":335850,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335851,"byte_end":335854,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335855,"byte_end":335919,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335920,"byte_end":335973,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335974,"byte_end":335995,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335996,"byte_end":336049,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":336050,"byte_end":336057,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":336058,"byte_end":336065,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9988},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":336841,"byte_end":336854,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":9990}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4148},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338835,"byte_end":338849,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":337954,"byte_end":338067,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338068,"byte_end":338071,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338072,"byte_end":338167,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338168,"byte_end":338171,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338172,"byte_end":338186,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338187,"byte_end":338190,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338191,"byte_end":338198,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338199,"byte_end":338240,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338241,"byte_end":338284,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338285,"byte_end":338313,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338314,"byte_end":338317,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338318,"byte_end":338391,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338392,"byte_end":338445,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338446,"byte_end":338499,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338500,"byte_end":338537,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338538,"byte_end":338541,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338542,"byte_end":338610,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338611,"byte_end":338639,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338640,"byte_end":338653,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338654,"byte_end":338663,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338664,"byte_end":338716,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338717,"byte_end":338771,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338772,"byte_end":338809,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338810,"byte_end":338819,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":338820,"byte_end":338827,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10029},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339382,"byte_end":339388,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10032}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4191},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340414,"byte_end":340420,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339510,"byte_end":339578,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339579,"byte_end":339655,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339656,"byte_end":339704,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339705,"byte_end":339708,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339709,"byte_end":339784,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339785,"byte_end":339854,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339855,"byte_end":339882,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339883,"byte_end":339886,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339887,"byte_end":339958,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339959,"byte_end":339979,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339980,"byte_end":339983,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":339984,"byte_end":339999,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340000,"byte_end":340003,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340004,"byte_end":340015,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340016,"byte_end":340057,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340058,"byte_end":340113,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340114,"byte_end":340117,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340118,"byte_end":340143,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340144,"byte_end":340170,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340171,"byte_end":340174,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340175,"byte_end":340213,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340214,"byte_end":340217,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340218,"byte_end":340239,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340240,"byte_end":340276,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340277,"byte_end":340329,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340330,"byte_end":340382,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340383,"byte_end":340388,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340389,"byte_end":340398,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340399,"byte_end":340406,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340889,"byte_end":340896,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340781,"byte_end":340855,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340860,"byte_end":340877,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4199},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341224,"byte_end":341231,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340962,"byte_end":341030,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341035,"byte_end":341066,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341071,"byte_end":341074,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341079,"byte_end":341152,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341157,"byte_end":341212,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341578,"byte_end":341589,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341309,"byte_end":341384,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341389,"byte_end":341420,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341425,"byte_end":341428,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341433,"byte_end":341506,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341511,"byte_end":341566,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4201},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341963,"byte_end":341973,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341727,"byte_end":341790,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341795,"byte_end":341798,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341803,"byte_end":341875,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":341880,"byte_end":341951,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10068},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342915,"byte_end":342919,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":10067},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342884,"byte_end":342910,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10070},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342957,"byte_end":342962,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":10067},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342925,"byte_end":342952,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":10067},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342869,"byte_end":342877,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":10068},{"krate":0,"index":10070}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342742,"byte_end":342808,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4254},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":343043,"byte_end":343049,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342987,"byte_end":343031,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":10086},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":343521,"byte_end":343539,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":10091},{"krate":0,"index":10092},{"krate":0,"index":10093},{"krate":0,"index":10094}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4257},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345831,"byte_end":345851,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":343702,"byte_end":343779,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":343780,"byte_end":343860,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":343861,"byte_end":343943,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":343944,"byte_end":344009,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344010,"byte_end":344013,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344014,"byte_end":344089,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344090,"byte_end":344159,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344160,"byte_end":344187,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344188,"byte_end":344191,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344192,"byte_end":344263,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344264,"byte_end":344284,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344285,"byte_end":344288,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344289,"byte_end":344304,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344305,"byte_end":344308,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344309,"byte_end":344325,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344326,"byte_end":344390,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344391,"byte_end":344394,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344395,"byte_end":344406,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344407,"byte_end":344448,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344449,"byte_end":344528,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344529,"byte_end":344532,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344533,"byte_end":344558,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344559,"byte_end":344585,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344586,"byte_end":344589,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344590,"byte_end":344654,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344655,"byte_end":344729,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344730,"byte_end":344800,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344801,"byte_end":344852,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344853,"byte_end":344912,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344913,"byte_end":344916,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344917,"byte_end":344980,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344981,"byte_end":344984,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":344985,"byte_end":345006,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345007,"byte_end":345062,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345063,"byte_end":345115,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345116,"byte_end":345121,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345122,"byte_end":345131,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345132,"byte_end":345139,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345140,"byte_end":345143,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345144,"byte_end":345163,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345164,"byte_end":345231,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345232,"byte_end":345308,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345309,"byte_end":345312,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345313,"byte_end":345324,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345325,"byte_end":345366,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345367,"byte_end":345446,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345447,"byte_end":345450,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345451,"byte_end":345476,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345477,"byte_end":345503,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345504,"byte_end":345507,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345508,"byte_end":345561,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345562,"byte_end":345565,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345566,"byte_end":345626,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345627,"byte_end":345630,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345631,"byte_end":345652,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345653,"byte_end":345693,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345694,"byte_end":345746,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345747,"byte_end":345799,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345800,"byte_end":345805,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345806,"byte_end":345815,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":345816,"byte_end":345823,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346468,"byte_end":346475,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346360,"byte_end":346434,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346439,"byte_end":346456,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346831,"byte_end":346838,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346569,"byte_end":346637,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346642,"byte_end":346673,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346678,"byte_end":346681,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346686,"byte_end":346759,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346764,"byte_end":346819,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4269},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347213,"byte_end":347224,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346944,"byte_end":347019,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347024,"byte_end":347055,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347060,"byte_end":347063,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347068,"byte_end":347141,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347146,"byte_end":347201,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347630,"byte_end":347640,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347394,"byte_end":347457,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347462,"byte_end":347465,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347470,"byte_end":347542,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347547,"byte_end":347618,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":4339},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351318,"byte_end":351324,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":349876,"byte_end":349946,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":349947,"byte_end":349950,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":349951,"byte_end":350020,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350021,"byte_end":350102,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350103,"byte_end":350134,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350135,"byte_end":350138,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350139,"byte_end":350218,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350219,"byte_end":350298,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350299,"byte_end":350353,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350354,"byte_end":350357,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350358,"byte_end":350438,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350439,"byte_end":350509,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350510,"byte_end":350532,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350533,"byte_end":350536,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350537,"byte_end":350614,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350615,"byte_end":350687,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350688,"byte_end":350765,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350766,"byte_end":350826,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350827,"byte_end":350830,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350831,"byte_end":350844,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350845,"byte_end":350848,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350849,"byte_end":350856,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350857,"byte_end":350898,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350899,"byte_end":350942,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350943,"byte_end":350946,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":350947,"byte_end":351002,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351003,"byte_end":351026,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351027,"byte_end":351066,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351067,"byte_end":351104,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351105,"byte_end":351144,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351145,"byte_end":351161,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351162,"byte_end":351178,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351179,"byte_end":351188,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351189,"byte_end":351196,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351197,"byte_end":351200,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351201,"byte_end":351253,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351254,"byte_end":351292,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351293,"byte_end":351302,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351303,"byte_end":351310,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10155},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351671,"byte_end":351677,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":10159},{"krate":0,"index":10160}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.7/src/lib.rs","byte_start":9137733,"byte_end":9137742,"line_start":331,"line_end":331,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":4385},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4396},{"krate":0,"index":4399},{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4409},{"krate":0,"index":4412},{"krate":0,"index":4415},{"krate":0,"index":4418},{"krate":0,"index":4421},{"krate":0,"index":4424},{"krate":0,"index":4427},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4445}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353216,"byte_end":353249,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353250,"byte_end":353253,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353254,"byte_end":353279,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353280,"byte_end":353283,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353284,"byte_end":353332,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353333,"byte_end":353386,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353387,"byte_end":353435,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353436,"byte_end":353483,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353484,"byte_end":353487,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353488,"byte_end":353562,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/mod.rs","byte_start":353563,"byte_end":353635,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":4439},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":354909,"byte_end":354917,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":354866,"byte_end":354898,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":4440},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":357673,"byte_end":357686,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":357625,"byte_end":357662,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":4448},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","parent":null,"children":[{"krate":0,"index":4449}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360145,"byte_end":360187,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360188,"byte_end":360191,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360192,"byte_end":360258,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":4449},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360895,"byte_end":360900,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360260,"byte_end":360295,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360296,"byte_end":360299,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360300,"byte_end":360375,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360376,"byte_end":360413,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360414,"byte_end":360417,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360418,"byte_end":360482,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360483,"byte_end":360486,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360487,"byte_end":360558,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360559,"byte_end":360610,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360611,"byte_end":360703,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360704,"byte_end":360707,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360708,"byte_end":360779,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/never.rs","byte_start":360780,"byte_end":360885,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":4461},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361003,"byte_end":361010,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4463},{"krate":0,"index":4464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4463},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361025,"byte_end":361031,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":4461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361040,"byte_end":361049,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":4461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4471},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361242,"byte_end":361248,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":4473}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361273,"byte_end":361281,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":4471},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4488},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":362587,"byte_end":362591,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10226},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":362947,"byte_end":362954,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10247},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":363688,"byte_end":363701,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10263},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":364043,"byte_end":364052,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10278},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365007,"byte_end":365014,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10293},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365725,"byte_end":365733,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10308},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366453,"byte_end":366464,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10320},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367349,"byte_end":367361,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10332},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":368509,"byte_end":368523,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4652},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":369288,"byte_end":369294,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":35908,"byte_end":35915,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":36045,"byte_end":36052,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":36277,"byte_end":36284,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":37058,"byte_end":37065,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":37290,"byte_end":37297,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40311,"byte_end":40315,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40422,"byte_end":40426,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42155,"byte_end":42159,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42272,"byte_end":42276,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43254,"byte_end":43257,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43426,"byte_end":43429,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43691,"byte_end":43694,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19059,"byte_end":19060,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":66501,"byte_end":66511,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":66662,"byte_end":66672,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":66795,"byte_end":66805,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67514,"byte_end":67524,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67654,"byte_end":67664,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67907,"byte_end":67917,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":68870,"byte_end":68880,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":69123,"byte_end":69133,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72457,"byte_end":72470,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72600,"byte_end":72613,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72856,"byte_end":72869,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":49047,"byte_end":49050,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74178,"byte_end":74182,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74778,"byte_end":74782,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74926,"byte_end":74930,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75533,"byte_end":75540,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":76101,"byte_end":76108,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":76253,"byte_end":76260,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":76286,"byte_end":76293,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77047,"byte_end":77056,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77659,"byte_end":77668,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":78766,"byte_end":78775,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":78976,"byte_end":78985,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80305,"byte_end":80317,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80543,"byte_end":80555,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":81668,"byte_end":81680,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":81884,"byte_end":81896,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":83546,"byte_end":83558,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":83656,"byte_end":83668,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":83982,"byte_end":83994,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":84181,"byte_end":84193,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84631,"byte_end":84637,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85331,"byte_end":85337,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85479,"byte_end":85485,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":86213,"byte_end":86226,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":86792,"byte_end":86805,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":87825,"byte_end":87838,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90010,"byte_end":90015,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90194,"byte_end":90199,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90231,"byte_end":90236,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90333,"byte_end":90338,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97419,"byte_end":97425,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99861,"byte_end":99867,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":100571,"byte_end":100577,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108536,"byte_end":108545,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":110384,"byte_end":110393,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112188,"byte_end":112194,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112533,"byte_end":112539,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112924,"byte_end":112930,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113311,"byte_end":113317,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113558,"byte_end":113564,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113903,"byte_end":113909,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":114185,"byte_end":114191,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":114726,"byte_end":114732,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":176877,"byte_end":176882,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":177108,"byte_end":177113,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":177322,"byte_end":177327,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":178923,"byte_end":178930,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":179195,"byte_end":179202,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":179380,"byte_end":179387,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":180413,"byte_end":180418,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":180812,"byte_end":180817,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":181067,"byte_end":181072,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":182197,"byte_end":182203,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":182423,"byte_end":182429,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":183137,"byte_end":183143,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":183806,"byte_end":183811,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":183967,"byte_end":183972,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":184721,"byte_end":184726,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":185474,"byte_end":185483,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":7366},{"krate":0,"index":7367},{"krate":0,"index":7368},{"krate":0,"index":7369}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":185669,"byte_end":185678,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":185796,"byte_end":185805,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":187246,"byte_end":187252,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":187725,"byte_end":187731,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":7431},{"krate":0,"index":7432},{"krate":0,"index":7433},{"krate":0,"index":7434}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":188054,"byte_end":188060,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":188397,"byte_end":188403,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":190575,"byte_end":190584,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":190881,"byte_end":190890,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":191157,"byte_end":191166,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":191433,"byte_end":191442,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":193544,"byte_end":193551,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7547},{"krate":0,"index":7548}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":193720,"byte_end":193727,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":193919,"byte_end":193926,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":195440,"byte_end":195444,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":195800,"byte_end":195804,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":196065,"byte_end":196069,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":196304,"byte_end":196308,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":197897,"byte_end":197900,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":198230,"byte_end":198233,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":198486,"byte_end":198489,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":198718,"byte_end":198721,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":200473,"byte_end":200476,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":200806,"byte_end":200809,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":201061,"byte_end":201064,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":201293,"byte_end":201296,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":203050,"byte_end":203057,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":203350,"byte_end":203357,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":203588,"byte_end":203595,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":203834,"byte_end":203841,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":204942,"byte_end":204946,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":7892},{"krate":0,"index":7893},{"krate":0,"index":7894},{"krate":0,"index":7895}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205443,"byte_end":205447,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205545,"byte_end":205549,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206751,"byte_end":206763,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":209253,"byte_end":209265,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":209385,"byte_end":209397,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210282,"byte_end":210285,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210474,"byte_end":210477,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":8016},{"krate":0,"index":8017},{"krate":0,"index":8018},{"krate":0,"index":8019}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210646,"byte_end":210649,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210817,"byte_end":210820,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":211932,"byte_end":211936,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":211987,"byte_end":211991,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":212142,"byte_end":212146,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":212285,"byte_end":212289,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":212940,"byte_end":212954,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":213105,"byte_end":213119,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":213263,"byte_end":213277,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":214588,"byte_end":214596,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":220093,"byte_end":220101,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":220243,"byte_end":220251,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":221410,"byte_end":221414,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":221659,"byte_end":221663,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":221774,"byte_end":221778,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":222475,"byte_end":222482,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":222730,"byte_end":222737,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":222848,"byte_end":222855,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":223575,"byte_end":223581,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":223933,"byte_end":223939,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":224208,"byte_end":224214,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":225475,"byte_end":225483,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":225803,"byte_end":225811,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":225995,"byte_end":226003,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":226374,"byte_end":226384,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2309},{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":227049,"byte_end":227053,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2353},{"krate":0,"index":8383},{"krate":0,"index":8384},{"krate":0,"index":8385},{"krate":0,"index":8386}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":227244,"byte_end":227248,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":227366,"byte_end":227370,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":228967,"byte_end":228976,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":229428,"byte_end":229437,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":8452},{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":229763,"byte_end":229772,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":230020,"byte_end":230029,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":232329,"byte_end":232333,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":8496},{"krate":0,"index":8497},{"krate":0,"index":8498},{"krate":0,"index":8499}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":232506,"byte_end":232510,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":233482,"byte_end":233486,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":234509,"byte_end":234518,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":234966,"byte_end":234975,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2501},{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567},{"krate":0,"index":8568}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":235294,"byte_end":235303,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":236822,"byte_end":236831,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":238215,"byte_end":238224,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":238512,"byte_end":238521,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":8622},{"krate":0,"index":8623},{"krate":0,"index":8624},{"krate":0,"index":8625},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240638,"byte_end":240647,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":241679,"byte_end":241688,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":242630,"byte_end":242634,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":242885,"byte_end":242889,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2610},{"krate":0,"index":8683},{"krate":0,"index":8684},{"krate":0,"index":8685},{"krate":0,"index":8686}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":243135,"byte_end":243139,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":243365,"byte_end":243369,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245251,"byte_end":245254,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246840,"byte_end":246843,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":247038,"byte_end":247041,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":249749,"byte_end":249753,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":250239,"byte_end":250243,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":250407,"byte_end":250411,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2732},{"krate":0,"index":8809},{"krate":0,"index":8810},{"krate":0,"index":8811},{"krate":0,"index":8812}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":250773,"byte_end":250777,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":252004,"byte_end":252008,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130704,"byte_end":130705,"line_start":222,"line_end":222,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":291503,"byte_end":291510,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":291803,"byte_end":291810,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":8870},{"krate":0,"index":8871},{"krate":0,"index":8872},{"krate":0,"index":8873}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":292091,"byte_end":292098,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":293241,"byte_end":293248,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3044}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":294166,"byte_end":294176,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":9117},{"krate":0,"index":9118},{"krate":0,"index":9119},{"krate":0,"index":9120}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":294369,"byte_end":294379,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":294500,"byte_end":294510,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":295609,"byte_end":295615,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":295907,"byte_end":295913,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":9316},{"krate":0,"index":9317},{"krate":0,"index":9318},{"krate":0,"index":9319}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":296191,"byte_end":296197,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":297474,"byte_end":297480,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298384,"byte_end":298391,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298445,"byte_end":298452,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3177}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298615,"byte_end":298622,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298764,"byte_end":298771,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":299547,"byte_end":299557,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3222}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":299853,"byte_end":299863,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":300108,"byte_end":300118,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":301517,"byte_end":301526,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":301922,"byte_end":301931,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3279},{"krate":0,"index":9446},{"krate":0,"index":9447},{"krate":0,"index":9448},{"krate":0,"index":9449}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":302174,"byte_end":302183,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":302440,"byte_end":302449,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":304590,"byte_end":304602,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":304902,"byte_end":304914,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3337},{"krate":0,"index":9507},{"krate":0,"index":9508},{"krate":0,"index":9509},{"krate":0,"index":9510}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":305111,"byte_end":305123,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3343}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":305401,"byte_end":305413,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":307597,"byte_end":307607,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3384},{"krate":0,"index":9551},{"krate":0,"index":9552},{"krate":0,"index":9553},{"krate":0,"index":9554}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":307872,"byte_end":307882,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":308128,"byte_end":308138,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3390},{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":309747,"byte_end":309757,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":309897,"byte_end":309907,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":310095,"byte_end":310105,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3440},{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":311103,"byte_end":311112,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":311331,"byte_end":311340,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":312603,"byte_end":312610,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":312969,"byte_end":312976,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3522}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":313256,"byte_end":313263,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3528}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":313517,"byte_end":313524,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":317387,"byte_end":317396,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":317658,"byte_end":317667,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3583},{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":319413,"byte_end":319425,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3629}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":319881,"byte_end":319893,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":9835},{"krate":0,"index":9836},{"krate":0,"index":9837},{"krate":0,"index":9838}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":320233,"byte_end":320245,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":321744,"byte_end":321756,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":322984,"byte_end":322996,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":323448,"byte_end":323460,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3692},{"krate":0,"index":9904},{"krate":0,"index":9905},{"krate":0,"index":9906},{"krate":0,"index":9907}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":323798,"byte_end":323810,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3699}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":325417,"byte_end":325429,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3704}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":257786,"byte_end":257787,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326236,"byte_end":326240,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326862,"byte_end":326866,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":328057,"byte_end":328063,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":328090,"byte_end":328096,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":328404,"byte_end":328410,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3885}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329007,"byte_end":329017,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329061,"byte_end":329071,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329385,"byte_end":329395,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3926}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331915,"byte_end":331920,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331952,"byte_end":331957,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":332042,"byte_end":332047,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":332296,"byte_end":332301,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":333240,"byte_end":333244,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4017}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":333373,"byte_end":333377,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":333982,"byte_end":333986,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4025}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334645,"byte_end":334652,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334684,"byte_end":334691,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334776,"byte_end":334783,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":335028,"byte_end":335035,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4071}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335422,"byte_end":335428,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335459,"byte_end":335465,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":336230,"byte_end":336236,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4113},{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":336932,"byte_end":336945,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":337858,"byte_end":337871,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4147}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340758,"byte_end":340764,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":342068,"byte_end":342074,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4205}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":342253,"byte_end":342259,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4209},{"krate":0,"index":4210}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342972,"byte_end":342980,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4254}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":343277,"byte_end":343285,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4256}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346312,"byte_end":346330,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347779,"byte_end":347797,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4276}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":348077,"byte_end":348095,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4282},{"krate":0,"index":4283}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":349207,"byte_end":349225,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351796,"byte_end":351802,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4348}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":352042,"byte_end":352048,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":352328,"byte_end":352334,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4360},{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":354781,"byte_end":354783,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":354838,"byte_end":354840,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361113,"byte_end":361114,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4469},{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361349,"byte_end":361350,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4478}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361620,"byte_end":361621,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4486}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":362637,"byte_end":362641,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4494}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":362735,"byte_end":362739,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4499}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":362998,"byte_end":363005,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4504},{"krate":0,"index":4505}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":363228,"byte_end":363235,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4510}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":363426,"byte_end":363433,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4515}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":363738,"byte_end":363751,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4521},{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":364168,"byte_end":364177,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4527},{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":364461,"byte_end":364470,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4533}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":364732,"byte_end":364741,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4538}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365063,"byte_end":365070,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4545},{"krate":0,"index":4546}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365289,"byte_end":365296,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4552}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365474,"byte_end":365481,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4558}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365782,"byte_end":365790,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4566},{"krate":0,"index":4567}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366013,"byte_end":366021,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4573}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366203,"byte_end":366211,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4579}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366521,"byte_end":366532,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4588},{"krate":0,"index":4589}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366792,"byte_end":366803,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367040,"byte_end":367051,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367418,"byte_end":367430,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4609},{"krate":0,"index":4610}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367691,"byte_end":367703,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4616}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367941,"byte_end":367953,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":368572,"byte_end":368586,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4635},{"krate":0,"index":4636}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":368809,"byte_end":368823,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4642}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":369024,"byte_end":369038,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":369344,"byte_end":369350,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":369443,"byte_end":369449,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4662},{"krate":0,"index":4663}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/unfold_state.rs","byte_start":370054,"byte_end":370065,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4674},{"krate":0,"index":4675}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11048,"byte_end":11054,"line_start":303,"line_end":303,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11152,"byte_end":11158,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1259}},{"kind":"Mod","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11425,"byte_end":11429,"line_start":318,"line_end":318,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4385}},{"kind":"Mod","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/lib.rs","byte_start":11440,"byte_end":11445,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4448}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":35908,"byte_end":35915,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":36045,"byte_end":36052,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4680},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":36277,"byte_end":36284,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4680},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":37058,"byte_end":37065,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4680},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/flatten.rs","byte_start":37290,"byte_end":37297,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4680},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40311,"byte_end":40315,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":40422,"byte_end":40426,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42155,"byte_end":42159,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4728},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/fuse.rs","byte_start":42272,"byte_end":42276,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4728},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43254,"byte_end":43257,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43426,"byte_end":43429,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4763},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/map.rs","byte_start":43691,"byte_end":43694,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4763},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19059,"byte_end":19060,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":221}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/future/mod.rs","byte_start":19191,"byte_end":19197,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":12101},"to":{"krate":0,"index":221}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":66501,"byte_end":66511,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":66662,"byte_end":66672,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":5316},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/into_future.rs","byte_start":66795,"byte_end":66805,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5316},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67514,"byte_end":67524,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67654,"byte_end":67664,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5351},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":67907,"byte_end":67917,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5351},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":68870,"byte_end":68880,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5351},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten.rs","byte_start":69123,"byte_end":69133,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5351},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72457,"byte_end":72470,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":5398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72600,"byte_end":72613,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5398},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/try_flatten_err.rs","byte_start":72856,"byte_end":72869,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5398},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":49047,"byte_end":49050,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_future/mod.rs","byte_start":49133,"byte_end":49142,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":44},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74178,"byte_end":74182,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6261},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74778,"byte_end":74782,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":6261},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/lazy.rs","byte_start":74926,"byte_end":74930,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6261},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":75533,"byte_end":75540,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6267},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":76101,"byte_end":76108,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6267},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":76253,"byte_end":76260,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6267},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/pending.rs","byte_start":76286,"byte_end":76293,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6267},"to":{"krate":1,"index":2474}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77047,"byte_end":77056,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6273},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":77659,"byte_end":77668,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":6273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":78766,"byte_end":78775,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":6273},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/maybe_done.rs","byte_start":78976,"byte_end":78985,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":6273},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80305,"byte_end":80317,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6286},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":80543,"byte_end":80555,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":81668,"byte_end":81680,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6286},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_maybe_done.rs","byte_start":81884,"byte_end":81896,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6286},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":83546,"byte_end":83558,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6304},"to":{"krate":1,"index":2831}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":83656,"byte_end":83668,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6304},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":83982,"byte_end":83994,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6304},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/option.rs","byte_start":84181,"byte_end":84193,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6304},"to":{"krate":1,"index":2759}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":84631,"byte_end":84637,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85331,"byte_end":85337,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_fn.rs","byte_start":85479,"byte_end":85485,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":803},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":86213,"byte_end":86226,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6343},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":86792,"byte_end":86805,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6343},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/poll_immediate.rs","byte_start":87825,"byte_end":87838,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6343},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90010,"byte_end":90015,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90194,"byte_end":90199,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6377},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90231,"byte_end":90236,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6377},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/ready.rs","byte_start":90333,"byte_end":90338,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6377},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":97419,"byte_end":97425,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6731},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":99861,"byte_end":99867,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6731},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/select.rs","byte_start":100571,"byte_end":100577,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6731},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":108536,"byte_end":108545,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":7061},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/try_select.rs","byte_start":110384,"byte_end":110393,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":7061},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112188,"byte_end":112194,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":7069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112533,"byte_end":112539,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":7069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":112924,"byte_end":112930,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":7069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113311,"byte_end":113317,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":7069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113558,"byte_end":113564,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":7069},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":113903,"byte_end":113909,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":7069},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":114185,"byte_end":114191,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7069},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/future/either.rs","byte_start":114726,"byte_end":114732,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7069},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":176877,"byte_end":176882,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":177108,"byte_end":177113,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":7093},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/chain.rs","byte_start":177322,"byte_end":177327,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":7093},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":178923,"byte_end":178930,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":7142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":179195,"byte_end":179202,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":7142},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/collect.rs","byte_start":179380,"byte_end":179387,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":7142},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":180413,"byte_end":180418,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":7193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":180812,"byte_end":180817,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":7193},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/unzip.rs","byte_start":181067,"byte_end":181072,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":7193},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":182197,"byte_end":182203,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":7251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":182423,"byte_end":182429,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":7251},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/concat.rs","byte_start":183137,"byte_end":183143,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":7251},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":183806,"byte_end":183811,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":7291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":183967,"byte_end":183972,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":7291},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/cycle.rs","byte_start":184721,"byte_end":184726,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":7291},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":185474,"byte_end":185483,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":7331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":185669,"byte_end":185678,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7331},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/enumerate.rs","byte_start":185796,"byte_end":185805,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":7331},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":187246,"byte_end":187252,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":7370},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":187725,"byte_end":187731,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":7370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":188054,"byte_end":188060,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":7370},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter.rs","byte_start":188397,"byte_end":188403,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":7370},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":190575,"byte_end":190584,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7435},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":190881,"byte_end":190890,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":191157,"byte_end":191166,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7435},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/filter_map.rs","byte_start":191433,"byte_end":191442,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7435},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":193544,"byte_end":193551,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":7503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":193720,"byte_end":193727,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":7503},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/flatten.rs","byte_start":193919,"byte_end":193926,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":7503},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":195440,"byte_end":195444,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":7604},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":195800,"byte_end":195804,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":196065,"byte_end":196069,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":7604},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fold.rs","byte_start":196304,"byte_end":196308,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":7604},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":197897,"byte_end":197900,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":7673},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":198230,"byte_end":198233,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":7673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":198486,"byte_end":198489,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":7673},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/any.rs","byte_start":198718,"byte_end":198721,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":7673},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":200473,"byte_end":200476,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":7734},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":200806,"byte_end":200809,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":7734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":201061,"byte_end":201064,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":7734},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/all.rs","byte_start":201293,"byte_end":201296,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":7734},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":203050,"byte_end":203057,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":7795},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":203350,"byte_end":203357,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":7795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":203588,"byte_end":203595,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":7795},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/for_each.rs","byte_start":203834,"byte_end":203841,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7795},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":204942,"byte_end":204946,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205443,"byte_end":205447,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7857},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/fuse.rs","byte_start":205545,"byte_end":205549,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7857},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":206751,"byte_end":206763,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":209253,"byte_end":209265,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7896},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/into_future.rs","byte_start":209385,"byte_end":209397,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7896},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210282,"byte_end":210285,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7971},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210474,"byte_end":210477,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210646,"byte_end":210649,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7971},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/map.rs","byte_start":210817,"byte_end":210820,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7971},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":211932,"byte_end":211936,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":8103},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":211987,"byte_end":211991,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":8103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":212142,"byte_end":212146,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":8103},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/next.rs","byte_start":212285,"byte_end":212289,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":8103},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":212940,"byte_end":212954,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":8111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":213105,"byte_end":213119,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":8111},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/select_next_some.rs","byte_start":213263,"byte_end":213277,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":8111},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":214588,"byte_end":214596,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":8124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":220093,"byte_end":220101,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":8124},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":220243,"byte_end":220251,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":8124},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":221410,"byte_end":221414,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":8163},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":221659,"byte_end":221663,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":8163},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":221774,"byte_end":221778,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":8163},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":222475,"byte_end":222482,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":8204},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":222730,"byte_end":222737,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":8204},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":222848,"byte_end":222855,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":8204},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":223575,"byte_end":223581,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":8245},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":223933,"byte_end":223939,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":8245},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":224208,"byte_end":224214,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":8245},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":225475,"byte_end":225483,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":8294},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":225803,"byte_end":225811,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":8294},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":225995,"byte_end":226003,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":8294},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/peek.rs","byte_start":226374,"byte_end":226384,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2300},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":227049,"byte_end":227053,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":8348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":227244,"byte_end":227248,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":8348},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip.rs","byte_start":227366,"byte_end":227370,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8348},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":228967,"byte_end":228976,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":8387},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":229428,"byte_end":229437,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":229763,"byte_end":229772,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8387},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/skip_while.rs","byte_start":230020,"byte_end":230029,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":8387},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":232329,"byte_end":232333,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":8461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":232506,"byte_end":232510,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":8461},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take.rs","byte_start":233482,"byte_end":233486,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":8461},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":234509,"byte_end":234518,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":8500},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":234966,"byte_end":234975,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":8500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":235294,"byte_end":235303,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":8500},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_while.rs","byte_start":236822,"byte_end":236831,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":8500},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":238215,"byte_end":238224,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":8569},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":238512,"byte_end":238521,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":8569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":240638,"byte_end":240647,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":8569},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/take_until.rs","byte_start":241679,"byte_end":241688,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":8569},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":242630,"byte_end":242634,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":8626},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":242885,"byte_end":242889,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":8626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":243135,"byte_end":243139,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":8626},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/then.rs","byte_start":243365,"byte_end":243369,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":8626},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":245251,"byte_end":245254,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":8694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":246840,"byte_end":246843,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":8694},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/zip.rs","byte_start":247038,"byte_end":247041,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":8694},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":249749,"byte_end":249753,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8744},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":250239,"byte_end":250243,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":250407,"byte_end":250411,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":250773,"byte_end":250777,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8744},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/scan.rs","byte_start":252004,"byte_end":252008,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8744},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130704,"byte_end":130705,"line_start":222,"line_end":222,"column_start":31,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2753},"to":{"krate":0,"index":2754}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/stream/mod.rs","byte_start":130848,"byte_end":130854,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":96},"to":{"krate":0,"index":2754}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":291503,"byte_end":291510,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8813},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":291803,"byte_end":291810,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":8813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":292091,"byte_end":292098,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":8813},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/and_then.rs","byte_start":293241,"byte_end":293248,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":8813},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":294166,"byte_end":294176,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":9086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":294369,"byte_end":294379,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":9086},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/into_stream.rs","byte_start":294500,"byte_end":294510,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":9086},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":295609,"byte_end":295615,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":9259},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":295907,"byte_end":295913,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":9259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":296191,"byte_end":296197,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":9259},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/or_else.rs","byte_start":297474,"byte_end":297480,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":9259},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298384,"byte_end":298391,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":9320},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298445,"byte_end":298452,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":9320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298615,"byte_end":298622,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":9320},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_next.rs","byte_start":298764,"byte_end":298771,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":9320},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":299547,"byte_end":299557,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":9328},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":299853,"byte_end":299863,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":9328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_for_each.rs","byte_start":300108,"byte_end":300118,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":9328},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":301517,"byte_end":301526,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":9385},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":301922,"byte_end":301931,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":9385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":302174,"byte_end":302183,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":9385},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter.rs","byte_start":302440,"byte_end":302449,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":9385},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":304590,"byte_end":304602,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":9450},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":304902,"byte_end":304914,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":9450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":305111,"byte_end":305123,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":9450},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_filter_map.rs","byte_start":305401,"byte_end":305413,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":9450},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":307597,"byte_end":307607,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":9516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":307872,"byte_end":307882,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":9516},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_flatten.rs","byte_start":308128,"byte_end":308138,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":9516},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":309747,"byte_end":309757,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":9562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":309897,"byte_end":309907,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":9562},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_collect.rs","byte_start":310095,"byte_end":310105,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":9562},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":311103,"byte_end":311112,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":9609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_concat.rs","byte_start":311331,"byte_end":311340,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":9609},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":312603,"byte_end":312610,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":9644},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":312969,"byte_end":312976,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":313256,"byte_end":313263,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":9644},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_fold.rs","byte_start":313517,"byte_end":313524,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":9644},"to":{"krate":1,"index":12101}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":317387,"byte_end":317396,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":9713},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_unfold.rs","byte_start":317658,"byte_end":317667,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":9713},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":319413,"byte_end":319425,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":9770},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":319881,"byte_end":319893,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":9770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":320233,"byte_end":320245,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":9770},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_skip_while.rs","byte_start":321744,"byte_end":321756,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":9770},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":322984,"byte_end":322996,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":9839},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":323448,"byte_end":323460,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":9839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":323798,"byte_end":323810,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":9839},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/try_take_while.rs","byte_start":325417,"byte_end":325429,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":9839},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":257786,"byte_end":257787,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3709},"to":{"krate":0,"index":3710}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/try_stream/mod.rs","byte_start":257868,"byte_end":257877,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":127},"to":{"krate":0,"index":3710}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326236,"byte_end":326240,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":9908},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/iter.rs","byte_start":326862,"byte_end":326866,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":9908},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":328057,"byte_end":328063,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":9917},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":328090,"byte_end":328096,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":9917},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat.rs","byte_start":328404,"byte_end":328410,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":9917},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329007,"byte_end":329017,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":9926},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329061,"byte_end":329071,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":9926},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/repeat_with.rs","byte_start":329385,"byte_end":329395,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":9926},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331915,"byte_end":331920,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":9935},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":331952,"byte_end":331957,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":9935},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":332042,"byte_end":332047,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":9935},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/empty.rs","byte_start":332296,"byte_end":332301,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":9935},"to":{"krate":1,"index":2474}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":333240,"byte_end":333244,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":9946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":333373,"byte_end":333377,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":9946},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/once.rs","byte_start":333982,"byte_end":333986,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":9946},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334645,"byte_end":334652,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":9977},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334684,"byte_end":334691,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":9977},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":334776,"byte_end":334783,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":9977},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/pending.rs","byte_start":335028,"byte_end":335035,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9977},"to":{"krate":1,"index":2474}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335422,"byte_end":335428,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4099},"to":{"krate":1,"index":2894}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":335459,"byte_end":335465,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4099},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_fn.rs","byte_start":336230,"byte_end":336236,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4099},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":336932,"byte_end":336945,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":9988},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/poll_immediate.rs","byte_start":337858,"byte_end":337871,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":9988},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":340758,"byte_end":340764,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":10029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":342068,"byte_end":342074,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":10029},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select.rs","byte_start":342253,"byte_end":342259,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":10029},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":342972,"byte_end":342980,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":10067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":343277,"byte_end":343285,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":10067},"to":{"krate":1,"index":2831}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":346312,"byte_end":346330,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":10086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":347779,"byte_end":347797,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":10086},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":348077,"byte_end":348095,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":10086},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/select_with_strategy.rs","byte_start":349207,"byte_end":349225,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":10086},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":351796,"byte_end":351802,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":10155},"to":{"krate":1,"index":8887}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":352042,"byte_end":352048,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":10155},"to":{"krate":4,"index":110}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/stream/unfold.rs","byte_start":352328,"byte_end":352334,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":10155},"to":{"krate":4,"index":96}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":354781,"byte_end":354783,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4436},"to":{"krate":0,"index":4439}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":354838,"byte_end":354840,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4438},"to":{"krate":0,"index":4440}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":354919,"byte_end":354924,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":21,"index":15},"to":{"krate":0,"index":4439}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/task/spawn.rs","byte_start":357688,"byte_end":357698,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":21,"index":18},"to":{"krate":0,"index":4440}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361113,"byte_end":361114,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4466},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361253,"byte_end":361260,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":4461},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361349,"byte_end":361350,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4475},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361536,"byte_end":361542,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":4471},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":361620,"byte_end":361621,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4483},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":362637,"byte_end":362641,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4488},"to":{"krate":1,"index":2831}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":362735,"byte_end":362739,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4488},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":362998,"byte_end":363005,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":10226},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":363228,"byte_end":363235,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":10226},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":363426,"byte_end":363433,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":10226},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":363738,"byte_end":363751,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":10247},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":364168,"byte_end":364177,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":10263},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":364461,"byte_end":364470,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":10263},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":364732,"byte_end":364741,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":10263},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365063,"byte_end":365070,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":10278},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365289,"byte_end":365296,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":10278},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365474,"byte_end":365481,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":10278},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":365782,"byte_end":365790,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":10293},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366013,"byte_end":366021,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":10293},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366203,"byte_end":366211,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":10293},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366521,"byte_end":366532,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":10308},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":366792,"byte_end":366803,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":10308},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367040,"byte_end":367051,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":10308},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367418,"byte_end":367430,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":10320},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367691,"byte_end":367703,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":10320},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":367941,"byte_end":367953,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":10320},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":368572,"byte_end":368586,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":10332},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":368809,"byte_end":368823,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":10332},"to":{"krate":0,"index":4471}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":369024,"byte_end":369038,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":10332},"to":{"krate":0,"index":4479}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":369344,"byte_end":369350,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4652},"to":{"krate":1,"index":2831}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/fns.rs","byte_start":369443,"byte_end":369449,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4652},"to":{"krate":0,"index":4461}},{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.17/src/unfold_state.rs","byte_start":370054,"byte_end":370065,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":10369},"to":{"krate":4294967295,"index":4294967295}}]}