{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1","program":"/home/yxine/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","jsonxf","/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=14467f3715f20c90","-C","extra-filename=-14467f3715f20c90","--out-dir","/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps","-L","dependency=/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps","--extern","getopts=/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps/libgetopts-8d1bb0c45a53763d.rmeta","--extern","memchr=/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps/libmemchr-d28aa1d9e6e99844.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/yxine/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/yxine/rust/rust-learn/httpie/target/rls/debug/deps/libjsonxf-14467f3715f20c90.rmeta"},"prelude":{"crate_id":{"name":"jsonxf","disambiguator":[9076782247466754343,1467766670932180573]},"crate_root":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src","external_crates":[{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","num":19,"id":{"name":"memchr","disambiguator":[6140065031258977407,15987706662218225508]}}],"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":0,"byte_end":15401,"line_start":1,"line_end":460,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":0,"byte_end":15401,"line_start":1,"line_end":460,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":41},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" Jsonxf is a JSON transformer, supporting fast pretty-printing,\n minimizing, and similar formatting of JSON-encoded UTF-8 data\n in string or stream format.  Use it to customize the\n presentation of valid JSON data.","sig":null,"attributes":[{"value":"/ Jsonxf is a JSON transformer, supporting fast pretty-printing,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/ minimizing, and similar formatting of JSON-encoded UTF-8 data","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":67,"byte_end":132,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ in string or stream format.  Use it to customize the","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":133,"byte_end":189,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/ presentation of valid JSON data.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":190,"byte_end":226,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":227,"byte_end":230,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It provides default pretty-printers (`pretty_print()`,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":231,"byte_end":289,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/ `pretty_print_stream()`) and minimizers (`minimize()`,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":290,"byte_end":348,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/ `minimize_stream()`), `Formatter` for customizable JSON","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":349,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/ formatting, and the `jsonxf` command-line tool (see","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":409,"byte_end":464,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/ `jsonxf -h` for options).","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":465,"byte_end":494,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":495,"byte_end":498,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Jsonxf is built for speed, and does not attempt to perform any","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":499,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/ input validation whatsoever.  Valid input produces valid output,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":566,"byte_end":634,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ but no guarantees are offered around the detection and rejection","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":635,"byte_end":703,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ of invalid input.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":704,"byte_end":725,"line_start":15,"line_end":15,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":726,"byte_end":729,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ GitHub:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":730,"byte_end":741,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ <a href=\"https://github.com/gamache/jsonxf\" target=\"_blank\">gamache/jsonxf</a>","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":742,"byte_end":824,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":825,"byte_end":828,"line_start":19,"line_end":19,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1726,"byte_end":1735,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"Formatter","qualname":"::Formatter","value":"Formatter { indent, line_separator, record_separator, after_colon, trailing_output, eager_record_separators }","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":" `Formatter` allows customizable pretty-printing, minimizing,\n and other formatting tasks on JSON-encoded UTF-8 data in\n string or stream format.","sig":null,"attributes":[{"value":"/ `Formatter` allows customizable pretty-printing, minimizing,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1325,"byte_end":1389,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/ and other formatting tasks on JSON-encoded UTF-8 data in","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1390,"byte_end":1450,"line_start":45,"line_end":45,"column_start":1,"column_end":61}},{"value":"/ string or stream format.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1451,"byte_end":1479,"line_start":46,"line_end":46,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1480,"byte_end":1483,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1484,"byte_end":1496,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1497,"byte_end":1500,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1501,"byte_end":1508,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ let mut fmt = jsonxf::Formatter::pretty_printer();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1509,"byte_end":1563,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/ fmt.line_separator = String::from(\"\\r\\n\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1564,"byte_end":1610,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1611,"byte_end":1626,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     fmt.format(\"{\\\"a\\\":1}\").unwrap(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1627,"byte_end":1668,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/     \"{\\r\\n  \\\"a\\\": 1\\r\\n}\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1669,"byte_end":1699,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1700,"byte_end":1706,"line_start":56,"line_end":56,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1707,"byte_end":1714,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":30},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1816,"byte_end":1822,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"indent","qualname":"::Formatter::indent","value":"std::string::String","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Used for beginning-of-line indentation in arrays and objects.\n","sig":null,"attributes":[{"value":"/ Used for beginning-of-line indentation in arrays and objects.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1742,"byte_end":1807,"line_start":59,"line_end":59,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":31},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1881,"byte_end":1895,"line_start":63,"line_end":63,"column_start":9,"column_end":23},"name":"line_separator","qualname":"::Formatter::line_separator","value":"std::string::String","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Used inside arrays and objects.\n","sig":null,"attributes":[{"value":"/ Used inside arrays and objects.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1837,"byte_end":1872,"line_start":62,"line_end":62,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":32},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1966,"byte_end":1982,"line_start":66,"line_end":66,"column_start":9,"column_end":25},"name":"record_separator","qualname":"::Formatter::record_separator","value":"std::string::String","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Used between root-level arrays and objects.\n","sig":null,"attributes":[{"value":"/ Used between root-level arrays and objects.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1910,"byte_end":1957,"line_start":65,"line_end":65,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":2044,"byte_end":2055,"line_start":69,"line_end":69,"column_start":9,"column_end":20},"name":"after_colon","qualname":"::Formatter::after_colon","value":"std::string::String","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Used after a colon inside objects.\n","sig":null,"attributes":[{"value":"/ Used after a colon inside objects.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":1997,"byte_end":2035,"line_start":68,"line_end":68,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":2110,"byte_end":2125,"line_start":72,"line_end":72,"column_start":9,"column_end":24},"name":"trailing_output","qualname":"::Formatter::trailing_output","value":"std::string::String","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Used at very end of output.\n","sig":null,"attributes":[{"value":"/ Used at very end of output.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":2070,"byte_end":2101,"line_start":71,"line_end":71,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":2293,"byte_end":2316,"line_start":76,"line_end":76,"column_start":9,"column_end":32},"name":"eager_record_separators","qualname":"::Formatter::eager_record_separators","value":"bool","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Add a record_separator as soon as a record ends, before seeing a\n subsequent record. Useful when there's a long time between records.\n","sig":null,"attributes":[{"value":"/ Add a record_separator as soon as a record ends, before seeing a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":2140,"byte_end":2208,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ subsequent record. Useful when there's a long time between records.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":2213,"byte_end":2284,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3542,"byte_end":3556,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"pretty_printer","qualname":"<Formatter>::pretty_printer","value":"pub fn pretty_printer() -> Formatter","parent":null,"children":[],"decl_id":null,"docs":" Returns a Formatter set up for pretty-printing.\n Defaults to using two spaces of indentation,\n Unix newlines, and no whitespace at EOF.","sig":null,"attributes":[{"value":"/ Returns a Formatter set up for pretty-printing.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3178,"byte_end":3229,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ Defaults to using two spaces of indentation,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3234,"byte_end":3282,"line_start":104,"line_end":104,"column_start":5,"column_end":53}},{"value":"/ Unix newlines, and no whitespace at EOF.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3287,"byte_end":3331,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3336,"byte_end":3339,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3344,"byte_end":3358,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3363,"byte_end":3366,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3371,"byte_end":3378,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3383,"byte_end":3398,"line_start":110,"line_end":110,"column_start":5,"column_end":20}},{"value":"/     jsonxf::Formatter::pretty_printer().format(\"{\\\"a\\\":1}\").unwrap(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3403,"byte_end":3476,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/     \"{\\n  \\\"a\\\": 1\\n}\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3481,"byte_end":3507,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3512,"byte_end":3518,"line_start":113,"line_end":113,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3523,"byte_end":3530,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3958,"byte_end":3967,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"minimizer","qualname":"<Formatter>::minimizer","value":"pub fn minimizer() -> Formatter","parent":null,"children":[],"decl_id":null,"docs":" Returns a Formatter set up for minimizing.\n Defaults to using Unix newlines between records,\n and no whitespace at EOF.","sig":null,"attributes":[{"value":"/ Returns a Formatter set up for minimizing.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3614,"byte_end":3660,"line_start":119,"line_end":119,"column_start":5,"column_end":51}},{"value":"/ Defaults to using Unix newlines between records,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3665,"byte_end":3717,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/ and no whitespace at EOF.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3722,"byte_end":3751,"line_start":121,"line_end":121,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3756,"byte_end":3759,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3764,"byte_end":3778,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3783,"byte_end":3786,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3791,"byte_end":3798,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3803,"byte_end":3818,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/     jsonxf::Formatter::minimizer().format(\"{  \\\"a\\\" : 1  }\\n\").unwrap(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3823,"byte_end":3899,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/     \"{\\\"a\\\":1}\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3904,"byte_end":3923,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"/ );","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3928,"byte_end":3934,"line_start":129,"line_end":129,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":3939,"byte_end":3946,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4665,"byte_end":4671,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"format","qualname":"<Formatter>::format","value":"pub fn format(&mut Self, &str) -> Result<String, String>","parent":null,"children":[],"decl_id":null,"docs":" Formats a string of JSON-encoded data.","sig":null,"attributes":[{"value":"/ Formats a string of JSON-encoded data.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4227,"byte_end":4269,"line_start":140,"line_end":140,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4274,"byte_end":4277,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Input must be valid JSON data in UTF-8 encoding.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4282,"byte_end":4334,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4339,"byte_end":4342,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4347,"byte_end":4361,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4366,"byte_end":4369,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4374,"byte_end":4381,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ let mut fmt = jsonxf::Formatter::pretty_printer();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4386,"byte_end":4440,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/ fmt.indent = String::from(\"\\t\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4445,"byte_end":4481,"line_start":148,"line_end":148,"column_start":5,"column_end":41}},{"value":"/ fmt.trailing_output = String::from(\"\\n\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4486,"byte_end":4531,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4536,"byte_end":4551,"line_start":150,"line_end":150,"column_start":5,"column_end":20}},{"value":"/     fmt.format(\"{\\\"a\\\":1}\").unwrap(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4556,"byte_end":4597,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/     \"{\\n\\t\\\"a\\\": 1\\n}\\n\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4602,"byte_end":4630,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4635,"byte_end":4641,"line_start":153,"line_end":153,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":4646,"byte_end":4653,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5721,"byte_end":5734,"line_start":188,"line_end":188,"column_start":12,"column_end":25},"name":"format_stream","qualname":"<Formatter>::format_stream","value":"pub fn format_stream(&mut Self, &mut dyn Read, &mut dyn Write)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Formats a stream of JSON-encoded data.","sig":null,"attributes":[{"value":"/ Formats a stream of JSON-encoded data.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5211,"byte_end":5253,"line_start":173,"line_end":173,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5258,"byte_end":5261,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Input must be valid JSON data in UTF-8 encoding.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5266,"byte_end":5318,"line_start":175,"line_end":175,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5323,"byte_end":5326,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5331,"byte_end":5345,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5350,"byte_end":5353,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5358,"byte_end":5371,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/ let mut fmt = jsonxf::Formatter::pretty_printer();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5376,"byte_end":5430,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/ fmt.indent = String::from(\"\\t\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5435,"byte_end":5471,"line_start":181,"line_end":181,"column_start":5,"column_end":41}},{"value":"/ fmt.trailing_output = String::from(\"\\n\");","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5476,"byte_end":5521,"line_start":182,"line_end":182,"column_start":5,"column_end":50}},{"value":"/ match fmt.format_stream(&mut std::io::stdin(), &mut std::io::stdout()) {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5526,"byte_end":5602,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/     Ok(_) => { /* YAY */ },","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5607,"byte_end":5638,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/     Err(e) => { panic!(e.to_string()); }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5643,"byte_end":5687,"line_start":185,"line_end":185,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5692,"byte_end":5697,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":5702,"byte_end":5709,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6603,"byte_end":6627,"line_start":213,"line_end":213,"column_start":12,"column_end":36},"name":"format_stream_unbuffered","qualname":"<Formatter>::format_stream_unbuffered","value":"pub fn format_stream_unbuffered<impl Read: Read,\n                                impl Write: Write>(&mut Self, &mut impl Read,\n                                                   &mut impl Write)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Formats a stream of JSON-encoded data without buffering.","sig":null,"attributes":[{"value":"/ Formats a stream of JSON-encoded data without buffering.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6018,"byte_end":6078,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6083,"byte_end":6086,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This will perform many small writes, so it's advisable to use an","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6091,"byte_end":6159,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/ output that does its own buffering. In simple cases, use","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6164,"byte_end":6224,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ [`Formatter::format_stream`] instead.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6229,"byte_end":6270,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6275,"byte_end":6278,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6283,"byte_end":6297,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6302,"byte_end":6305,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6310,"byte_end":6323,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ let mut fmt = jsonxf::Formatter::pretty_printer();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6328,"byte_end":6382,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/ let mut stdin = std::io::stdin();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6387,"byte_end":6424,"line_start":208,"line_end":208,"column_start":5,"column_end":42}},{"value":"/ let mut stdout = std::io::stdout();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6429,"byte_end":6468,"line_start":209,"line_end":209,"column_start":5,"column_end":44}},{"value":"/ fmt.format_stream_unbuffered(&mut stdin, &mut std::io::LineWriter::new(stdout))","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6473,"byte_end":6556,"line_start":210,"line_end":210,"column_start":5,"column_end":88}},{"value":"/     .unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6561,"byte_end":6579,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":6584,"byte_end":6591,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7804,"byte_end":7814,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"format_buf","qualname":"<Formatter>::format_buf","value":"pub fn format_buf<impl Write: Write>(&mut Self, &[u8], &mut impl Write)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Format directly from a buffer into a writer.","sig":null,"attributes":[{"value":"/ Format directly from a buffer into a writer.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7317,"byte_end":7365,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7370,"byte_end":7373,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This may be called on chunks of a JSON document to format it bit by bit.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7378,"byte_end":7454,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7459,"byte_end":7462,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ As such, it does not add the `trailing_output` at the end.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7467,"byte_end":7529,"line_start":243,"line_end":243,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7534,"byte_end":7537,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7542,"byte_end":7556,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7561,"byte_end":7564,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7569,"byte_end":7582,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ let text = \"[1, 2, 3]\";","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7587,"byte_end":7614,"line_start":248,"line_end":248,"column_start":5,"column_end":32}},{"value":"/ let mut fmt = jsonxf::Formatter::pretty_printer();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7619,"byte_end":7673,"line_start":249,"line_end":249,"column_start":5,"column_end":59}},{"value":"/ let mut stdout = std::io::stdout();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7678,"byte_end":7717,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/ fmt.format_buf(text.as_bytes(), &mut stdout).unwrap();","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7722,"byte_end":7780,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":7785,"byte_end":7792,"line_start":252,"line_end":252,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12971,"byte_end":12983,"line_start":384,"line_end":384,"column_start":8,"column_end":20},"name":"pretty_print","qualname":"::pretty_print","value":"pub fn pretty_print(&str) -> Result<String, String>","parent":null,"children":[],"decl_id":null,"docs":" Pretty-prints a string of JSON-encoded data.","sig":null,"attributes":[{"value":"/ Pretty-prints a string of JSON-encoded data.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12321,"byte_end":12369,"line_start":362,"line_end":362,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12370,"byte_end":12373,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ Input must be valid JSON data in UTF-8 encoding.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12374,"byte_end":12426,"line_start":364,"line_end":364,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12427,"byte_end":12430,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ The output will use two spaces as an indent, a line feed","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12431,"byte_end":12491,"line_start":366,"line_end":366,"column_start":1,"column_end":61}},{"value":"/ as newline character, and no trailing whitespace.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12492,"byte_end":12545,"line_start":367,"line_end":367,"column_start":1,"column_end":54}},{"value":"/ To customize this behavior, use a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12546,"byte_end":12583,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ `jsonxf::Formatter::pretty_printer()` directly.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12584,"byte_end":12635,"line_start":369,"line_end":369,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12636,"byte_end":12639,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12640,"byte_end":12655,"line_start":371,"line_end":371,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12656,"byte_end":12659,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12660,"byte_end":12667,"line_start":373,"line_end":373,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12668,"byte_end":12683,"line_start":374,"line_end":374,"column_start":1,"column_end":16}},{"value":"/     jsonxf::pretty_print(\"{\\\"a\\\":1,\\\"b\\\":2}\").unwrap(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12684,"byte_end":12743,"line_start":375,"line_end":375,"column_start":1,"column_end":60}},{"value":"/     \"{\\n  \\\"a\\\": 1,\\n  \\\"b\\\": 2\\n}\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12744,"byte_end":12783,"line_start":376,"line_end":376,"column_start":1,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12784,"byte_end":12790,"line_start":377,"line_end":377,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12791,"byte_end":12806,"line_start":378,"line_end":378,"column_start":1,"column_end":16}},{"value":"/     jsonxf::pretty_print(\"{\\\"empty\\\":{},\\n\\n\\n\\n\\n\\\"one\\\":[1]}\").unwrap(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12807,"byte_end":12885,"line_start":379,"line_end":379,"column_start":1,"column_end":79}},{"value":"/     \"{\\n  \\\"empty\\\": {},\\n  \\\"one\\\": [\\n    1\\n  ]\\n}\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12886,"byte_end":12944,"line_start":380,"line_end":380,"column_start":1,"column_end":59}},{"value":"/ );","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12945,"byte_end":12951,"line_start":381,"line_end":381,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12952,"byte_end":12959,"line_start":382,"line_end":382,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":12960,"byte_end":12963,"line_start":383,"line_end":383,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13779,"byte_end":13798,"line_start":409,"line_end":409,"column_start":8,"column_end":27},"name":"pretty_print_stream","qualname":"::pretty_print_stream","value":"pub fn pretty_print_stream(&mut dyn Read, &mut dyn Write) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Pretty-prints a stream of JSON-encoded data.","sig":null,"attributes":[{"value":"/ Pretty-prints a stream of JSON-encoded data.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13086,"byte_end":13134,"line_start":388,"line_end":388,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13135,"byte_end":13138,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ Input must be valid JSON data in UTF-8 encoding.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13139,"byte_end":13191,"line_start":390,"line_end":390,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13192,"byte_end":13195,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ The output will use two spaces as an indent, a line feed","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13196,"byte_end":13256,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/ as newline character, and no trailing whitespace.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13257,"byte_end":13310,"line_start":393,"line_end":393,"column_start":1,"column_end":54}},{"value":"/ To customize this behavior, use a","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13311,"byte_end":13348,"line_start":394,"line_end":394,"column_start":1,"column_end":38}},{"value":"/ `jsonxf::Formatter::pretty_printer()` directly.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13349,"byte_end":13400,"line_start":395,"line_end":395,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13401,"byte_end":13404,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ `pretty_print_stream` uses `std::io::BufReader` and `std::io:BufWriter`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13405,"byte_end":13480,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/ to provide IO buffering; no external buffering should be necessary.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13481,"byte_end":13552,"line_start":398,"line_end":398,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13553,"byte_end":13556,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13557,"byte_end":13571,"line_start":400,"line_end":400,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13572,"byte_end":13575,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13576,"byte_end":13589,"line_start":402,"line_end":402,"column_start":1,"column_end":14}},{"value":"/ match jsonxf::pretty_print_stream(&mut std::io::stdin(), &mut std::io::stdout()) {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13590,"byte_end":13676,"line_start":403,"line_end":403,"column_start":1,"column_end":87}},{"value":"/     Ok(_) => { /* YAY */ },","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13677,"byte_end":13708,"line_start":404,"line_end":404,"column_start":1,"column_end":32}},{"value":"/     Err(e) => { panic!(e.to_string()) }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13709,"byte_end":13752,"line_start":405,"line_end":405,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13753,"byte_end":13759,"line_start":406,"line_end":406,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13760,"byte_end":13767,"line_start":407,"line_end":407,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13768,"byte_end":13771,"line_start":408,"line_end":408,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14489,"byte_end":14497,"line_start":434,"line_end":434,"column_start":8,"column_end":16},"name":"minimize","qualname":"::minimize","value":"pub fn minimize(&str) -> Result<String, String>","parent":null,"children":[],"decl_id":null,"docs":" Minimizes a string of JSON-encoded data.","sig":null,"attributes":[{"value":"/ Minimizes a string of JSON-encoded data.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13932,"byte_end":13976,"line_start":413,"line_end":413,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13977,"byte_end":13980,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ Input must be valid JSON data in UTF-8 encoding.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":13981,"byte_end":14033,"line_start":415,"line_end":415,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14034,"byte_end":14037,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ The output will use a line feed as newline character between","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14038,"byte_end":14102,"line_start":417,"line_end":417,"column_start":1,"column_end":65}},{"value":"/ records, and no trailing whitespace.  To customize this behavior,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14103,"byte_end":14172,"line_start":418,"line_end":418,"column_start":1,"column_end":70}},{"value":"/ use a `jsonxf::Formatter::minimizer()` directly.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14173,"byte_end":14225,"line_start":419,"line_end":419,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14226,"byte_end":14229,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14230,"byte_end":14245,"line_start":421,"line_end":421,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14246,"byte_end":14249,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14250,"byte_end":14257,"line_start":423,"line_end":423,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14258,"byte_end":14273,"line_start":424,"line_end":424,"column_start":1,"column_end":16}},{"value":"/     jsonxf::minimize(\"{ \\\"a\\\": \\\"b\\\", \\\"c\\\": 0 } \").unwrap(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14274,"byte_end":14339,"line_start":425,"line_end":425,"column_start":1,"column_end":66}},{"value":"/     \"{\\\"a\\\":\\\"b\\\",\\\"c\\\":0}\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14340,"byte_end":14371,"line_start":426,"line_end":426,"column_start":1,"column_end":32}},{"value":"/ );","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14372,"byte_end":14378,"line_start":427,"line_end":427,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14379,"byte_end":14394,"line_start":428,"line_end":428,"column_start":1,"column_end":16}},{"value":"/     jsonxf::minimize(\"\\r\\n\\tnull\\r\\n\").unwrap(),","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14395,"byte_end":14447,"line_start":429,"line_end":429,"column_start":1,"column_end":53}},{"value":"/     \"null\"","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14448,"byte_end":14462,"line_start":430,"line_end":430,"column_start":1,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14463,"byte_end":14469,"line_start":431,"line_end":431,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14470,"byte_end":14477,"line_start":432,"line_end":432,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14478,"byte_end":14481,"line_start":433,"line_end":433,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15259,"byte_end":15274,"line_start":458,"line_end":458,"column_start":8,"column_end":23},"name":"minimize_stream","qualname":"::minimize_stream","value":"pub fn minimize_stream(&mut dyn Read, &mut dyn Write) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Minimizes a stream of JSON-encoded data.","sig":null,"attributes":[{"value":"/ Minimizes a stream of JSON-encoded data.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14595,"byte_end":14639,"line_start":438,"line_end":438,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14640,"byte_end":14643,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ Input must be valid JSON data in UTF-8 encoding.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14644,"byte_end":14696,"line_start":440,"line_end":440,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14697,"byte_end":14700,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ The output will use a line feed as newline character between","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14701,"byte_end":14765,"line_start":442,"line_end":442,"column_start":1,"column_end":65}},{"value":"/ records, and no trailing whitespace.  To customize this behavior,","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14766,"byte_end":14835,"line_start":443,"line_end":443,"column_start":1,"column_end":70}},{"value":"/ use a `jsonxf::Formatter::minimizer()` directly.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14836,"byte_end":14888,"line_start":444,"line_end":444,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14889,"byte_end":14892,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ `minimize_stream` uses `std::io::BufReader` and `std::io:BufWriter`","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14893,"byte_end":14964,"line_start":446,"line_end":446,"column_start":1,"column_end":72}},{"value":"/ to provide IO buffering; no external buffering should be necessary.","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":14965,"byte_end":15036,"line_start":447,"line_end":447,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15037,"byte_end":15040,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15041,"byte_end":15055,"line_start":449,"line_end":449,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15056,"byte_end":15059,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15060,"byte_end":15073,"line_start":451,"line_end":451,"column_start":1,"column_end":14}},{"value":"/ match jsonxf::minimize_stream(&mut std::io::stdin(), &mut std::io::stdout()) {","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15074,"byte_end":15156,"line_start":452,"line_end":452,"column_start":1,"column_end":83}},{"value":"/     Ok(_) => { /* YAY */ },","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15157,"byte_end":15188,"line_start":453,"line_end":453,"column_start":1,"column_end":32}},{"value":"/     Err(e) => { panic!(e.to_string()) }","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15189,"byte_end":15232,"line_start":454,"line_end":454,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15233,"byte_end":15239,"line_start":455,"line_end":455,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15240,"byte_end":15247,"line_start":456,"line_end":456,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":15248,"byte_end":15251,"line_start":457,"line_end":457,"column_start":1,"column_end":4}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":2684,"byte_end":2693,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/yxine/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonxf-1.1.1/src/jsonxf.rs","byte_start":2684,"byte_end":2693,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}}]}